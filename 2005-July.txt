From urilith at berlios.de  Mon Jul  4 19:41:17 2005
From: urilith at berlios.de (Michael Tindal at BerliOS)
Date: Mon, 4 Jul 2005 19:41:17 +0200
Subject: [nmodule-commits] r34 - in trunk: . misc src src/NModule.Core src/NModule.Core.Loader src/NModule.Core.Module src/NModule.Dependency.Core src/NModule.Dependency.Parser src/antlr-runtime test test/NModule.Core.Test test/NModule.Core.Test/data/src test/NModule.Core.Test/data/src/nm-dr
Message-ID: <200507041741.j64HfHas008045@sheep.berlios.de>

Author: urilith
Date: 2005-07-04 19:41:09 +0200 (Mon, 04 Jul 2005)
New Revision: 34

Added:
   trunk/NModule.build.include
   trunk/RELEASE-NOTES-0.2
   trunk/src/NModule.Core.Loader/NModule.Core.Loader.build
   trunk/src/NModule.Core.Module/NModule.Core.Module.build
   trunk/src/NModule.Core/NModule.Core.build
   trunk/src/NModule.Dependency.Core/NModule.Dependency.Core.build
   trunk/src/NModule.Dependency.Parser/NModule.Dependency.Parser.build
   trunk/src/NModule.Src.build
   trunk/src/antlr-runtime/antlr-runtime.build
   trunk/test/NModule.Core.Test/NModuleTests.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/
   trunk/test/NModule.Core.Test/data/src/nm-dr/.monkeywrench.log
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs
   trunk/test/NModule.Test.build
Removed:
   trunk/test/NModule.Core.Test/nm-ld.cs
Modified:
   trunk/
   trunk/ChangeLog
   trunk/NModule.build
   trunk/README
   trunk/misc/svkchangelog
   trunk/src/NModule.Core.Loader/DepResolver.cs
   trunk/src/NModule.Core.Loader/ModuleController.cs
   trunk/src/NModule.Core.Loader/ModuleLoader.cs
   trunk/src/NModule.Core.Module/ModuleInfo.cs
   trunk/src/NModule.Dependency.Core/DepOps.cs
   trunk/src/NModule.Dependency.Core/DepVersion.cs
   trunk/src/NModule.Dependency.Parser/DepLexer.cs
   trunk/src/NModule.Dependency.Parser/DepParser.cs
   trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.cs
   trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.txt
   trunk/src/NModule.Dependency.Parser/nmodule-dep.g
   trunk/test/NModule.Core.Test/NModule.Core.Test.mdp
Log:
 r138 at dreamshadow:  urilith | 2005-07-04 12:40:18 -0500
 2005-07-04 Michael Tindal <urilith at gentoo.org>
 
   * NModule.build: Actually wrote it.
   * misc/svkchangelog: Ignore ! lines.
   * src/NModule.Core/NModule.Core.build: NModule.Core build file.
   * src/NModule.Core.Loader/DepResolver.cs: Lots of bug fixes.
   * src/NModule.Core.Loader/ModuleController.cs: Lots of bug fixes.
   * src/NModule.Core.Loader/ModuleLoader.cs: Lots of bug fixes.
   * src/NModule.Core.Loader/NModule.Core.Loader.build: NModule.Core.Loader build file.
   * src/NModule.Core.Module/ModuleInfo.cs: Bug fixes.
   * src/NModule.Core.Module/NModule.Core.Module.build: NModule.Core.Module build file.
   * src/NModule.Dependency.Core/DepOps.cs: Added the Null operator so OpResolve operators can know their parent operator. This is required for the optional operator.
   * src/NModule.Dependency.Core/DepVersion.cs: Added the ToString method.
   * src/NModule.Dependency.Core/NModule.Dependency.Core.build: NModule.Dependency.Core build file.
   * src/NModule.Dependency.Parser/DepLexer.cs: Added '-' to the acceptable names for dependency IDs (not the first letter, but beyond that) so things like nm-dr-01b work.
   * src/NModule.Dependency.Parser/DepParser.cs: Actually made "&&", "||", "!!", "??", and "^^" set the DepOp.
   * src/NModule.Dependency.Parser/DepParserTokenTypes.cs: Updated ID_LETTER.
   * src/NModule.Dependency.Parser/DepParserTokenTypes.txt: Updated ID_LETTER.
   * src/NModule.Dependency.Parser/nmodule-dep.g: The above changes.
   * src/NModule.Dependency.Parser/NModule.Dependency.Parser.build: NModule.Dependency.Parser.build.
   * src/antlr-runtime/antlr-runtime.build: antlr-runtime build file.
   * src/NModule.Src.build: NModule source build file.
   * test/NModule.Core.Test/NModule.Core.Test.mdp: Updated the monkey develop file.
   * test/NModule.Core.Test/data/src/nm-dr: New sources for dependency resolver tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs: DR tests.
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs: DR tests.
   * test/NModule.Core.Test/NModuleTests.cs: Added the dependency resolver test suite.
   * test/NModule.Core.Test/nm-ld.cs: Renamed to NModuleTests.cs
   * test/NModule.Test.build: NModule.Test build file.
   * NModule.build.include: Include file borrowed from NUnit.
   * RELEASE-NOTES-0.2: Release notes for this version.
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:136
   + b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:138

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/ChangeLog	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,3 +1,40 @@
+2005-07-04 Michael Tindal <urilith at gentoo.org>
+
+	* NModule.build: Actually wrote it.
+	* misc/svkchangelog: Ignore ! lines.
+	* src/NModule.Core/NModule.Core.build: NModule.Core build file.
+	* src/NModule.Core.Loader/DepResolver.cs: Lots of bug fixes.
+	* src/NModule.Core.Loader/ModuleController.cs: Lots of bug fixes.
+	* src/NModule.Core.Loader/ModuleLoader.cs: Lots of bug fixes.
+	* src/NModule.Core.Loader/NModule.Core.Loader.build: NModule.Core.Loader build file.
+	* src/NModule.Core.Module/ModuleInfo.cs: Bug fixes.
+	* src/NModule.Core.Module/NModule.Core.Module.build: NModule.Core.Module build file.
+	* src/NModule.Dependency.Core/DepOps.cs: Added the Null operator so OpResolve operators can know their parent operator.  This is required for the optional operator.
+	* src/NModule.Dependency.Core/DepVersion.cs: Added the ToString method.
+	* src/NModule.Dependency.Core/NModule.Dependency.Core.build: NModule.Dependency.Core build file.
+	* src/NModule.Dependency.Parser/DepLexer.cs: Added '-' to the acceptable names for dependency IDs (not the first letter, but beyond that) so things like nm-dr-01b work.
+	* src/NModule.Dependency.Parser/DepParser.cs: Actually made "&&", "||", "!!", "??", and "^^" set the DepOp.
+	* src/NModule.Dependency.Parser/DepParserTokenTypes.cs: Updated ID_LETTER.
+	* src/NModule.Dependency.Parser/DepParserTokenTypes.txt: Updated ID_LETTER.
+	* src/NModule.Dependency.Parser/nmodule-dep.g: The above changes.
+	* src/NModule.Dependency.Parser/NModule.Dependency.Parser.build: NModule.Dependency.Parser.build.
+	* src/antlr-runtime/antlr-runtime.build: antlr-runtime build file.
+	* src/NModule.Src.build: NModule source build file.
+	* test/NModule.Core.Test/NModule.Core.Test.mdp: Updated the monkey develop file.
+	* test/NModule.Core.Test/data/src/nm-dr: New sources for dependency resolver tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs: DR tests.
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs: DR tests.
+	* test/NModule.Core.Test/NModuleTests.cs: Added the dependency resolver test suite.
+	* test/NModule.Core.Test/nm-ld.cs: Renamed to NModuleTests.cs
+	* test/NModule.Test.build: NModule.Test build file.
+	* NModule.build.include: Include file borrowed from NUnit.
+	* RELEASE-NOTES-0.2: Release notes for this version.
+
 2005-06-30 Michael Tindal <urilith at gentoo.org>
 
 	* src/NModule.Core.Loader/ModuleController.cs:  Fixed wrong initial ref count in IncRef, fixed DecRefs for the no dependencies case.

Modified: trunk/NModule.build
===================================================================
--- trunk/NModule.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/NModule.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -27,12 +27,33 @@
 WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<project name="NModule" default="all" basedir=".">
+<project name="NModule" default="compile-all" basedir=".">
   <description>NModule build files.</description>
 
+  <include buildfile="NModule.build.include" />
   <!-- properties -->
   <property name="debug" value="true" overwrite="false" />
   <property name="release" value="false" overwrite="false" />
   <property name="strong" value="false" overwrite="false" />
 
-  
+  <target name="compile-all" depends="compile-src,compile-tests" />
+
+  <target name="setup-build-dir">
+	<mkdir dir="${current.build.dir}" unless="${directory::exists(${current.build.dir})}" />
+  </target>
+
+  <target name="compile-src" depends="set-build-config,set-runtime-config,set-build-dir,make-build-dir">
+    <nant buildfile="src/NModule.Src.build" />
+  </target>
+
+  <target name="compile-tests">
+    <nant buildfile="test/NModule.Test.build" />
+  </target>
+
+  <target name="tests" depends="set-build-dir">
+    <nunit2>
+      <formatter type="Plain" />
+      <test assemblyname="${current.build.dir}/NModule.Core.Test.dll" />
+   </nunit2>
+  </target>
+</project>

Added: trunk/NModule.build.include
===================================================================
--- trunk/NModule.build.include	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/NModule.build.include	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,292 @@
+<?xml version="1.0"?>
+<project name="NUnit" default="build" basedir=".">
+
+  <!-- Init global settings if not already done. -->
+  <call target="init-global-settings"
+    unless="${property::exists('project.initialized')}"/>
+
+  <!-- Command-line build configurations -->
+  <target name="debug" description="Set config to debug">
+    <call target="set-debug-build-config" />
+  </target>
+
+  <target name="release" description="Set config to release">
+    <call target="set-release-build-config" />
+  </target>
+
+  <!-- Command-line runtime configurations -->
+  <target name="net" description="Set runtime to .NET 1.1">
+    <call target="set-net-1.1-runtime-config"/>
+  </target>
+    
+  <target name="net-1.0" description="Set runtime to .NET 1.0">
+    <call target="set-net-1.0-runtime-config"/>
+  </target>
+
+  <target name="net-1.1" description="Set runtime to .NET 1.1">
+    <call target="set-net-1.1-runtime-config"/>
+  </target>
+      
+  <target name="net-2.0" description="Set runtime to .NET 2.0">
+    <call target="set-net-2.0-runtime-config"/>
+  </target>
+      
+  <target name="mono" description="Set runtime to Mono">
+    <call target="set-mono-1.0-runtime-config"/>
+  </target>
+
+  <target name="mono-1.0" description="Set runtime to Mono">
+    <call target="set-mono-1.0-runtime-config"/>
+  </target>
+
+  <!-- Init global settings -->
+  <target name="init-global-settings">
+
+    <!-- Set Project name -->
+    <property name="project.name" value="NUnit"/>
+
+    <!-- If a sub-project build is being run, the
+         project.src.dir will be set to a relative path -->
+    <property name="project.src.dir"
+      value="${path::get-full-path(project.src.dir)}"
+      if="${property::exists('project.src.dir')}"/>
+    <!-- Otherwise, it's the nant project base dir -->
+    <property name="project.src.dir"
+      value="${nant.project.basedir}/src"
+      unless="${property::exists('project.src.dir')}"/>
+    
+    <!-- Project base dir is the src dir's parent -->
+    <property name="project.base.dir"
+      value="${path::get-directory-name(project.src.dir)}"/>
+
+    <!-- Other directories are derived from src and base -->
+    <property name="project.build.dir" 
+      value="${path::combine(project.base.dir,'build')}"/>
+    <property name="project.package.dir" 
+      value="${path::combine(project.base.dir,'package')}"/>
+    <property name="project.doc.dir"
+      value="${path::combine(project.base.dir,'doc')}"/>
+    <property name="project.samples.dir"
+      value="${path::combine(project.base.dir,'samples')}"/>
+
+    <!-- Supported frameworks -->
+    <property name="frameworks" 
+      value="net-1.0,net-1.1,mono-1.0"/>
+    <property name="framework.available.net-1.0" 
+      value="${framework::exists('net-1.0')}"/>
+    <property name="framework.available.net-1.1" 
+      value="${framework::exists('net-1.1')}"/>
+    <property name="framework.available.net-2.0" 
+      value="${framework::exists('net-2.0')}"/>
+    <property name="framework.available.mono-1.0" 
+      value="${framework::exists('mono-1.0')}"/>
+  
+    <!-- Visual Studio locations -->
+    <if test="${platform::is-win32()}">
+      <readregistry property="vs.2002.path" 
+        key="Software\Microsoft\VisualStudio\7.0\InstallDir" 
+        hive="LocalMachine" failonerror="false"/>
+      <readregistry property="vs.2003.path" 
+        key="Software\Microsoft\VisualStudio\7.1\InstallDir" 
+        hive="LocalMachine" />
+    </if>
+
+    <!-- NUnit version for packaging -->
+    <property name="package.version" value="2.2.2"/>
+
+    <!-- Root of the package file name -->
+    <property name="package.name" 
+      value="${project.name}-${package.version}"/>
+
+    <!-- Package directories -->
+    <property name="package.working.dir" 
+      value="${path::combine(project.package.dir,package.name)}"/>
+    <property name="package.bin.dir" 
+      value="${path::combine(package.working.dir,'bin')}"/>
+    <property name="package.doc.dir" 
+      value="${path::combine(package.working.dir,'doc')}"/>
+    <property name="package.samples.dir" 
+      value="${path::combine(package.working.dir,'samples')}"/>
+    <property name="package.src.dir" 
+      value="${path::combine(package.working.dir,'src')}"/>
+
+    <!-- Default build and runtime configurations -->
+    <property name="build.config" value="debug"/>
+    <property name="build.clean" value="false"/>
+    <property name="runtime.platform" value="net"/>
+    <property name="runtime.version" value="1.1"/>
+    <property name="runtime.config" value="net-1.1"/>
+    <property name="build.dir.set" value="false"/>
+
+    <!-- Indicate that we initialized global settings -->
+    <property name="project.initialized" value="true"/>
+
+  </target>
+ 
+  <!-- Set up build configuration -->
+  <target name="set-build-config">
+    <call target="set-${build.config}-build-config"/>
+    <property name="build.dir.set" value="false"/>
+  </target>
+
+  <target name="set-debug-build-config">
+    <property name="build.config" value="debug"/>
+    <property name="build.debug" value="true"/>
+    <property name="build.defines.csc" 
+      value="DEBUG,TRACE" readonly="false" />
+    <property name="build.defines.jsc" 
+      value="DEBUG,TRACE" readonly="false" />
+    <property name="build.defines.vbc" 
+      value="DEBUG=True,TRACE=True" readonly="false" />
+    <property name="build.defines.vjc"
+      value="DEBUG,TRACE" readonly="false" />
+    <property name="build.defines.cl"
+      value="/D _DEBUG" readonly="false" />
+    <property name="zip.build.suffix" value="-dbg"/>
+    <property name="msi.build.suffix" value="-dbg"/>
+  </target>
+	
+  <target name="set-release-build-config">
+    <property name="build.config" value="release"/>
+    <property name="build.debug" value="false"/>
+    <property name="build.defines.csc"
+      value="TRACE,STRONG" readonly="false" />
+    <property name="build.defines.jsc"
+      value="TRACE,STRONG" readonly="false" />
+    <property name="build.defines.vbc"
+      value="TRACE=True,STRONG=True" readonly="false" />
+    <property name="build.defines.vjc"
+      value="TRACE,STRONG" readonly="false" />
+    <property name="build.defines.cl"
+      value="/D STRONG" readonly="false" />
+    <property name="zip.build.suffix" value=""/>
+    <property name="msi.build.suffix" value=""/>
+  </target>
+
+  <!-- Set up runtime configuration -->
+  <target name="set-runtime-config">
+    <call target="set-${runtime.config}-runtime-config"/>
+    <property name="build.dir.set" value="false"/>
+  </target>
+
+  <target name="set-net-1.0-runtime-config">
+    <property name="runtime.platform" value="net"/>
+    <property name="runtime.version" value="1.0"/>
+    <property name="runtime.config" value="net-1.0"/>
+    <property name="build.mono" value="false"/>
+    <property name="build.win32" value="true"/>
+    <property name="nant.settings.currentframework" 
+      value="net-1.0"/>
+    <property name="zip.runtime.suffix" value="-net-1.0"/>
+    <property name="msi.runtime.suffix" value="-net-1.0"/>
+  </target>
+	
+  <target name="set-net-1.1-runtime-config">
+    <property name="runtime.platform" value="net"/>
+    <property name="runtime.version" value="1.1"/>
+    <property name="runtime.config" value="net-1.1"/>
+    <property name="build.mono" value="false"/>
+    <property name="build.win32" value="true"/>
+    <property name="nant.settings.currentframework" 
+      value="net-1.1"/>
+    <property name="zip.runtime.suffix" value="-net-1.1"/>
+    <!-- Note: no suffix for the msi -->
+    <property name="msi.runtime.suffix" value=""/>
+  </target>
+	
+  <target name="set-net-2.0-runtime-config">
+    <property name="runtime.platform" value="net"/>
+    <property name="runtime.version" value="2.0"/>
+    <property name="runtime.config" value="net-2.0"/>
+    <property name="build.mono" value="false"/>
+    <property name="build.win32" value="true"/>
+    <property name="nant.settings.currentframework" 
+      value="net-2.0"/>
+    <property name="zip.runtime.suffix" value="-net-2.0"/>
+    <!-- no suffix for the msi -->
+    <property name="msi.runtime.suffix" value=""/>
+  </target>
+	
+  <target name="set-mono-1.0-runtime-config">
+    <property name="runtime.platform" value="mono"/>
+    <property name="runtime.version" value="1.0"/>
+    <property name="runtime.config" value="mono-1.0"/>
+    <property name="build.mono" value="true"/>
+    <property name="build.win32" value="false"/>
+    <property name="nant.settings.currentframework" 
+      value="mono-1.0"/>
+    <property name="zip.runtime.suffix" value="-mono"/>
+    <property name="msi.runtime.suffix" value="-mono"/>
+  </target>
+
+  <!-- Set up the build directory -->
+  <target name="set-build-dir"
+    depends="set-build-config,set-runtime-config">
+    <property name="runtime.platform.dir"
+      value="${path::combine(project.build.dir,runtime.platform)}"/>
+    <property name="runtime.version.dir"
+      value="${path::combine(runtime.platform.dir,runtime.version)}"/>
+    <property name="current.build.dir" 
+      value="${path::combine(runtime.version.dir,build.config)}"/>
+    <property name="build.dir.set" value="true"/>
+  </target>
+  
+  <target name="set-build-dir-if-needed">
+    <call target="set-build-dir" unless="${build.dir.set}"/>
+  </target>
+
+  <target name="make-build-dir" depends="set-build-dir-if-needed">
+    <mkdir dir="${current.build.dir}"
+      unless="${directory::exists(current.build.dir)}"/>
+  </target>
+
+  <!-- Setup the package configuration info -->
+  <target name="set-package-config"
+    depends="set-build-config,set-runtime-config">
+    <property name="zip.file.name" 
+      value="${package.name}${zip.runtime.suffix}${zip.build.suffix}.zip"/>
+    <property name="msi.file.name"
+      value="${package.name}${msi.runtime.suffix}${msi.build.suffix}.msi"/>
+    <property name="zipped.src.file.name"
+      value="${package.name}-src.zip"/>
+    <property name="zipped.bin.file.name"
+      value="${package.name}-bin.zip"/>
+  </target>
+
+  <!-- Dump configuration settings for debugging -->
+  <target name="dump-settings" depends="set-build-dir,set-package-config">
+    <echo>Configuration</echo>
+    <echo>  Config:       ${build.config}</echo>
+    <echo>  Runtime:      ${runtime.config}</echo>
+    <echo>  Version:      ${package.version}</echo>
+    <echo>  Package name: ${package.name}</echo>
+    <echo>  Zip file:     ${zip.file.name}</echo>
+    <echo>  Msi file:     ${msi.file.name}</echo>
+    <echo>  Source zip:   ${zipped.src.file.name}</echo>
+    <echo></echo>
+    <echo>Project Directories</echo>
+    <echo>  Base:         ${project.base.dir}</echo>
+    <echo>  Doc:          ${project.doc.dir}</echo>
+    <echo>  Samples:      ${project.samples.dir}</echo>
+    <echo>  Source:       ${project.src.dir}</echo>
+    <echo>  Build:        ${project.build.dir}</echo>
+    <echo>  Package:      ${project.package.dir}</echo>
+    <echo></echo>
+    <echo>Current Build Directories</echo>
+    <echo>  Build:        ${current.build.dir}</echo>
+    <echo></echo>
+    <echo>Package Directories</echo>
+    <echo>  Working:      ${package.working.dir}</echo>
+    <echo>  Bin:          ${package.bin.dir}</echo>
+    <echo>  Doc:          ${package.doc.dir}</echo>
+    <echo>  Samples:      ${package.samples.dir}</echo>
+    <echo>  Source:       ${package.src.dir}</echo>
+    <echo></echo>
+    <echo>System Directories</echo>
+    <echo>  Framework:    ${nant.settings.currentframework.frameworkdirectory}</echo>
+    <echo>  SDK:          ${nant.settings.currentframework.sdkdirectory}</echo>
+    <echo>  VS 2002:      ${vs.2002.path}</echo>
+    <echo>  VS 2003:      ${vs.2003.path}</echo>
+  </target>
+
+</project>

Modified: trunk/README
===================================================================
--- trunk/README	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/README	2005-07-04 17:41:09 UTC (rev 34)
@@ -20,4 +20,22 @@
 A complete API documentation tree can be generated using the nant docs target, note however
 that generating the documentation requires ndoc.
 
-We encourage you to visit our website at 
+Requirements:
+
+  - antlr 2.7.5 or higher is required to generate the parser.  If you don't want to generate
+    the parser during the build stages, comment out the <exec> rule in NModule.Dependency.Parser.build.
+    We keep up-to-date sources in the release, so the only reason you'd need that is if you were
+    hacking on the grammar.
+  - NUnit 2.2 or greater is required for the test suite.
+  - NAnt 0.85 or greater is required for building.
+
+Installation instructions:
+
+  See the nant file for instructions.
+
+  For mono, do nant mono-1.0 compile-all
+  For net-1.1 do nant net-1.1 compile-all
+
+  And so on.
+
+Better instructions will come with later releases.

Added: trunk/RELEASE-NOTES-0.2
===================================================================
--- trunk/RELEASE-NOTES-0.2	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/RELEASE-NOTES-0.2	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,36 @@
+0.2
+---
+
+This release is fully functional, and is suitable for every day use.
+
+The following bugs still remain in this release, not all of which are within my control:
+
+  - Mono does not honor the PrivatePath, so even though nmodule adds the search path to the
+    appdomain's resolving path, it doesnt work.  The work around until Mono fixes this bug is
+    to set MONO_PATH="$MONO_PATH:my_search_dir_1:mysearch_dir_2:...:my_search_dir_n".  This is
+    unnecessary on Microsoft's implementation.
+
+  - This release contains monodoc generated documentation in api-docs.  This release does not
+    contain build instructions for the documentation, so you're on your own with it.  The next
+    release will contain build instructions for the monodoc documentation and ndoc documentation.
+
+  - This release also contains an mbuild build system.  To use it, install mbuild from mono's svn, and
+    mbuild -i ., mbuild -a.  Should be able to install from mbuild too, this has not been tested.
+
+  - This release contains several components of the new NUnit based test suite.  However, currently it
+    is not automated.
+
+  - This releases nant build files do not contain an install target.  I will add that for the 0.3 release.
+
+  - The test suite is built during the compile-all stage of the build.  There is a tests target, but this
+    is not run by default, due to the above Mono bug.  If you would like to run it as part of your build
+    process on Windows, do nant net-1.1 compile-all tests.  Next release this target will be renamed to
+    run-tests.
+
+  - Basic loading, unloading, and dependency resolution is tested this release, and it passes all 9 current tests.
+    Next release will include 9 more dependency resolution tests, and five more components, including
+    unresolved/circular dependency checking, role instantiantion, and entry/exit handling.  Also next release
+    I will be splitting the tests into seperated classes to be ran instead of one giant test class.
+
+  - This release is ready for use, unfortunately documentation is scarce.  I'll write up some documentation
+    for 0.4, but until then you can reach me at mtindal at paradoxpoint.com   Enjoy!

Modified: trunk/misc/svkchangelog
===================================================================
--- trunk/misc/svkchangelog	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/misc/svkchangelog	2005-07-04 17:41:09 UTC (rev 34)
@@ -32,7 +32,7 @@
 echo "$(date "+%Y-%m-%d") $SVKCNAME <$SVKEMAIL>" > ChangeLog
 echo >> ChangeLog
 
-svk status | sed -e 's@^\?.*@@g' -e '/^$/d' | egrep -o '[^ ]*(/.*)?$' | sed -e 's@^\..*@@'  -e 's at .*ChangeLog@@g' -e '/^$/d' -e 's@^\./@@g' > .tmp-list
+svk status | sed -e 's@^\?.*@@g' -e 's@^\!.*@@g' -e '/^$/d' | egrep -o '[^ ]*(/.*)?$' | sed -e 's@^\..*@@'  -e 's at .*ChangeLog@@g' -e '/^$/d' -e 's@^\./@@g' > .tmp-list
 
 for i in $(cat .tmp-list); do
 	echo -e "\t* ${i}: " >> ChangeLog

Added: trunk/src/NModule.Core/NModule.Core.build
===================================================================
--- trunk/src/NModule.Core/NModule.Core.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core/NModule.Core.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,47 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Core" default="compile" basedir=".">
+  <description>NModule.Core build files.</description>
+
+  <include buildfile="../../NModule.build.include" />
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/NModule.Core.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+	<sources basedir=".">
+		<include name="*.cs"/>
+	</sources>
+     </csc>
+  </target>
+</project>

Modified: trunk/src/NModule.Core.Loader/DepResolver.cs
===================================================================
--- trunk/src/NModule.Core.Loader/DepResolver.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Loader/DepResolver.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -59,7 +59,7 @@
 			foreach (string s in _search_path) {
 				if (Directory.Exists (s)) {
 					foreach (string f in Directory.GetFiles (s, "*.dll")) {
-						if (f.Substring (0, f.Length - 4) == _name) {
+						if (f.Substring (0, f.Length - 4).IndexOf (_name) != -1) {
 							return s + "/" + f;
 						}
 					}
@@ -69,45 +69,60 @@
 			return null;
 		}
 		
-		protected void OpResolve (DepNode _node, ArrayList _parents, ModuleInfo _info, bool checking) {
+		protected void OpResolve (DepNode _node, ArrayList _parents, ModuleInfo _info, bool checking, DepOps _parentop) {
+			Console.WriteLine ("-->> OpResolve called with:");
+			Console.WriteLine ("---->> _node = {0}", _node == null ? "null" : "not null");
+			Console.WriteLine ("---->> _node.DepOp = {0}", OpToString (_node.DepOp));
+			Console.WriteLine ("---->> _parents = {0}", _parents == null ? "null" : "not null");
+			Console.WriteLine ("---->> _info = {0}", _info == null ? "null" : "not null");
+			Console.WriteLine ("---->> checking = {0}", checking);
 			bool _ret;
 			DepOps _op = _node.DepOp;
-			DepConstraint _constraint = _node.Constraint;
+			
 			if ((_op == DepOps.And) || (_op == DepOps.Not) || (_op == DepOps.Opt) || (_op == DepOps.Or) || (_op == DepOps.Xor)) {
 				// combo-operators
 				ArrayList _results = new ArrayList ();
 				ArrayList _c = new ArrayList ();
 				foreach (DepNode _child in _node.Children) {
-					try {
-						OpResolve (_child, _parents, _info, checking);
+					//try {
+						OpResolve (_child, _parents, _info, checking, _op);
 						_results.Add (true);
 						_c.Add (_child.Constraint);
-					} catch (Exception e) {
-						_results.Add (false);
-						_c.Add (_child.Constraint);
-					}
+					//} catch (Exception e) {
+					//	_results.Add (false);
+					//	_c.Add (_child.Constraint);
+					//}
 				}
 				
 				switch (_op) {
 					case DepOps.And:
 						int r = 0;
+						if (_results == null) {
+							Console.WriteLine ("_results is NULL!");
+						}
+						
 						foreach (bool _result in _results) {
 							if (!_result) {
-								throw new UnresolvedDependencyException (
-									string.Format("The following dependency for the module {0} could not be resolved: (AND operator)\n\t{1} ({2})",
-										_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
-								);
+								if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
+									throw new UnresolvedDependencyException (
+										string.Format("The following dependency for the module {0} could not be resolved: (AND operator)\n\t{1} ({2})",
+											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
+									);
+								}
 							}
 							r++;
 						}
 						break;
 					case DepOps.Not:
 						foreach (bool _result in _results) {
-							if (_result)
-								throw new UnresolvedDependencyException (
-									string.Format("The following dependency for the module {0} could not be resolved: (NOT operator)\n\t{1} ({2})",
-										_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
-								);
+							if (_result) {
+								if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
+									throw new UnresolvedDependencyException (
+										string.Format("The following dependency for the module {0} could not be resolved: (NOT operator)\n\t{1} ({2})",
+											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
+									);
+								}
+							}
 						}
 						break;
 					case DepOps.Opt: // This is optional so stuff is true regardless
@@ -132,7 +147,8 @@
 							foreach (string _exc in _urexc) {
 								_sb.Append(string.Format("\t{0}\n", _exc));
 							}
-							throw new UnresolvedDependencyException (_sb.ToString ());
+							if (_parentop != DepOps.Null && _parentop != DepOps.Opt)
+								throw new UnresolvedDependencyException (_sb.ToString ());
 						}
 						break;
 					case DepOps.Xor:
@@ -155,8 +171,11 @@
 							r++;
 						}
 						
-						if (_xt || _xf)
+						if (_xt && _xf)
 							_ret = false;
+						
+						if (!_xt && _xf)
+							_ret = false;
 							
 						if (!_ret) {
 							StringBuilder _sb = new StringBuilder (
@@ -165,35 +184,55 @@
 							foreach (string _exc in _xexc) {
 								_sb.Append (string.Format("\t{0}\n", _exc));
 							}
-							throw new UnresolvedDependencyException (_sb.ToString ());
+							if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
+								throw new UnresolvedDependencyException (_sb.ToString ());
+							}
 						}
 						break;
 				}
 			} else {
+				DepConstraint _constraint = _node.Constraint;
+				
 				// single operators
 				if (SearchForModule (_constraint.Name) == null)
 					_ret = false;
 		
 				ModuleInfo _ninfo;
 						
-				ModuleLoader _loader = new ModuleLoader (_search_path, this);
+				ModuleLoader _loader = new ModuleLoader (_search_path, _controller);
 						
-				_loader.LoadModule (_parents, _constraint.Name, out _ninfo, true);
+				_loader.LoadModule (_parents, _constraint.Name, out _ninfo, true, true);
 				
-				if ((_op == DepOps.Equal) || (_op == DepOps.GreaterThan) || (_op == DepOps.GreaterThanEqual) || (_op == DepOps.LessThan)
-					|| (_op == DepOps.LessThanEqual) || (_op == DepOps.NotEqual)) {
-					if (!IsEmptyVersion (_constraint.Version)) {
-						if (!VersionMatch (_constraint.Version, _ninfo.Version, _op)) {
-							throw new UnresolvedDependencyException (
+				bool result = true;
+				
+				Console.WriteLine ("Checking {0}'s version:  Empty {1}", _constraint.Name, IsEmptyVersion (_constraint.Version));
+				Console.WriteLine ("Checking ({0} {1} {2}) Result: {3}", OpToString (_op), _ninfo.Version.ToString(), _constraint.Version.ToString(), VersionMatch (_ninfo.Version, _constraint.Version, _op));
+					
+				if (!IsEmptyVersion (_constraint.Version)) {
+					if (!VersionMatch (_ninfo.Version, _constraint.Version, _op)) {
+						result = false;
+					}
+				}
+
+				if (!result) {
+					if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
+						throw new UnresolvedDependencyException (
 								string.Format("The following dependency for the module {0} could not be resolved: ({3} operator)\n\t{1} ({2})",
 									_info.Name, _constraint.Name, _constraint.Version, OpToString (_op))
 							);
-						}
 					}
-					if (!checking) {
-						_controller.LoadModule (_constraint.Name);
-					}		
+					else
+						return;			
 				}
+					
+				if (_controller == null)
+					Console.WriteLine ("_controller is NULL!");
+					
+				if (!checking) {
+					_controller.LoadModule (_constraint.Name);
+				}
+					
+				Console.WriteLine ("Checking {0} for {1} (Result: {2})", OpToString (_op), _info.Name, result);
 				// we got this far, so obviously it loaded okay
 			}		
 		}
@@ -231,160 +270,85 @@
 		}
 		
 		protected bool IsEmptyVersion (DepVersion _ver) {
+			if (_ver == null)
+				return true;
+				
 			return ((_ver.Major == -1) && (_ver.Minor == -1) && (_ver.Build == -1) && (_ver.Revision == -1));
 		}
 		
-		protected bool VersionMatch (DepVersion _dver, DepVersion _ver, DepOps _op) {
-			bool mjgt = false, mngt = false, bgt = false, rgt = false;
-			bool mjeq = false, mneq = false, beq = false, req = false;
-			bool mjlt = false, mnlt = false, blt = false, rlt = false;
-			bool mji = false, mni = false, bi = false, ri = false;
-			
-			if (_dver.Major == -1) {
-				mji = true;
-			} else if (_dver.Major > _ver.Major) {
-				mjgt = true;
-			} else if (_dver.Major == _ver.Major) {
-				mjeq = true;
-			} else {
-				mjlt = true;
-			}
-			
-			if (_dver.Minor == -1) {
-				mni = true;
-			} else if (_dver.Minor > _ver.Minor) {
-				mngt = true;
-			} else if (_dver.Minor == _ver.Minor) {
-				mneq = true;
-			} else {
-				mnlt = true;
-			}
-			
-			if (_dver.Build == -1) {
-				bi = true;
-			} else if (_dver.Build > _ver.Build) {
-				bgt = true;
-			} else if (_dver.Build == _ver.Build) {
-				beq = true;
-			} else {
-				blt = true;
-			}
-			
-			if (_dver.Revision == -1) {
-				ri = true;
-			} else if (_dver.Revision > _ver.Revision) {
-				rgt = true;
-			} else if (_dver.Revision == _ver.Revision) {
-				req = true;
-			} else {
-				rlt = true;
-			}
+		protected bool VersionMatch (DepVersion _ver, DepVersion _dver, DepOps _op) {
+			Version _mver, _drver;
 
-			if (mji)
+			if (_dver.Major == -1)
 				return true;
-									
-			if ((_op == DepOps.Equal) || (_op == DepOps.GreaterThanEqual) || (_op == DepOps.LessThanEqual)) {					
-					if (mjeq && mni)
-						return true;
-						
-					if (mjeq && mneq && bi)
-						return true;
-						
-					if (mjeq && mneq && beq && ri)
-						return true;
-					
-					if (mjeq && mneq && beq && req)
-						return true;
-			}
+				
+			_mver = new Version (_dver.Major != -1 ? _ver.Major : 0,
+				_dver.Minor != -1 ? _ver.Minor : 0,
+				_dver.Build != -1 ? _ver.Build : 0,
+				_dver.Revision != -1 ? _ver.Revision : 0);
+
+			_drver = new Version (_dver.Major != -1 ? _dver.Major : 0,
+				_dver.Minor != -1 ? _dver.Minor : 0,
+				_dver.Build != -1 ? _dver.Build : 0,
+				_dver.Revision != -1 ? _dver.Revision : 0);
 			
-			if (_op == DepOps.NotEqual) {
-				if (!mjeq && mni)
-					return true;
-					
-				if (!mjeq && !mneq && bi)
-					return true;
-					
-				if (!mjeq && !mneq && !beq && ri)
-					return true;
-					
-				if (!mjeq && !mneq && !beq && !req)
-					return true;
-			}
+			int vres = _mver.CompareTo (_drver);
 			
-			if (_op == DepOps.GreaterThan) {
-				if (mjlt)
-					return false;
-					
-				if (mjgt)
-					return true;
-				
-				if (mjeq && mnlt)
-					return false;
-					
-				if (mngt)
-					return true;
-					
-				if (mjeq && mneq && blt)
-					return false;
-					
-				if (bgt)
-					return true;
-					
-				if (mjeq && mneq && beq && rlt)
-					return false;
-					
-				if (rgt)
-					return true;
+			switch (_op) {
+				case DepOps.Equal:
+					return vres == 0;
+				case DepOps.GreaterThan:
+					return vres > 0;
+				case DepOps.GreaterThanEqual:
+					return vres > 0 || vres == 0;
+				case DepOps.LessThan:
+					return vres < 0;
+				case DepOps.LessThanEqual:
+					return vres < 0 || vres == 0;
+				case DepOps.NotEqual:
+					return vres != 0;
 			}
 			
-			if (_op == DepOps.LessThan) {
-				if (mjgt)
-					return false;
-					
-				if (mjlt)
-					return true;
+			return false;				
+		}
+			
+		protected void CheckCircularDeps (DepNode _x, ArrayList _parents) {
+			if (_parents == null)
+				return;
 				
-				if (mjeq && mngt)
-					return false;
-					
-				if (mnlt)
-					return true;
-					
-				if (mjeq && mneq && bgt)
-					return false;
-					
-				if (blt)
-					return true;
-					
-				if (mjeq && mneq && beq && rgt)
-					return false;
-					
-				if (rlt)
-					return true;
+			if (_x == null)
+				return;
+				
+			foreach (DepNode _d in _x.Children) {
+				CheckCircularDeps (_d, _parents);
 			}
 			
-			if (_op == DepOps.Loaded)
-				return true;
-				
-			
-			return false;
+			if (_x.Constraint != null) {
+				foreach (string _parent in _parents) {
+					Console.WriteLine ("CIRCULAR DEPENDENCY CHECK:  {0} {1}", _x.Constraint.Name, _parent);
+					if (_x.Constraint.Name == _parent) {
+						throw new CircularDependencyException (string.Format ("{0} depends on {1}, but {1} is depending on {0}.", _x.Constraint.Name, _parent));
+					}
+				}
+			}
 		}
-				
+		
 		protected void InternalResolve (ArrayList _parents, ModuleInfo _info, bool checking) {
 			if (_info.Dependencies == null)
 				return;
 			
-			DepNode _node = _info.Dependencies;
+			if (_parents == null)
+				_parents = new ArrayList ();
 			
-			foreach (string _parent in _parents) {
-				if (_node.Constraint.Name == _parent) {
-					throw new CircularDependencyException (
-						string.Format("The module {0} is depending on {1} which is depending on {0}, causing a circular dependency.",
-							_parent, _info.Name, _parent)
-					);
+			if (checking) {
+				foreach (DepNode _c in _info.Dependencies.Children) {
+					CheckCircularDeps (_c, _parents);
 				}
 			}
-			OpResolve (_node, _parents, _info, checking);			
+			
+			Console.WriteLine (">>>>> Beginning OpResolve loop for {0}...", _info.Name);
+			
+			OpResolve (_info.Dependencies, _parents, _info, checking, DepOps.Null);		
 		}
 #endregion
 
@@ -398,4 +362,4 @@
 		}
 #endregion
 	}
-}
\ No newline at end of file
+}

Modified: trunk/src/NModule.Core.Loader/ModuleController.cs
===================================================================
--- trunk/src/NModule.Core.Loader/ModuleController.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Loader/ModuleController.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -56,9 +56,6 @@
 		// Information Map
 		protected Hashtable _info_map;
 		
-		// Dependency Resolver
-		protected DepResolver _resolver;
-		
 		// Module Loader
 		protected ModuleLoader _loader;
 #endregion
@@ -68,8 +65,7 @@
 			_ref_counts = new Hashtable ();
 			_search_path = new ArrayList ();
 			_roles = new ArrayList ();
-			_resolver = new DepResolver (this, _search_path);
-			_loader = new ModuleLoader (_search_path, _resolver);
+			_loader = new ModuleLoader (_search_path, this);
 			_info_map = new Hashtable ();
 		}
 
@@ -109,6 +105,15 @@
 			CallEntryHandler (_domain.GetAssemblies()[0]);
 		}
 		
+		public bool IsLoaded (string _name) {
+			foreach (string _key in _app_domain_map.Keys) {
+				Console.WriteLine ("Key {0} / Name {1}", _key, _name);
+				Console.WriteLine ("ContainsKey({0}) == {1}", _name, _app_domain_map.ContainsKey (_name));
+			}
+
+			return _app_domain_map.ContainsKey (_name);
+		}
+		
 		protected void DecRefs (DepNode _x) {
 			if (_x == null)
 				return;

Modified: trunk/src/NModule.Core.Loader/ModuleLoader.cs
===================================================================
--- trunk/src/NModule.Core.Loader/ModuleLoader.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Loader/ModuleLoader.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -41,14 +41,16 @@
 	// an existing app-domain (for example, grouped dependencies).  See the configuration
 	// options for an example.
 	public class ModuleLoader {
-	
+
+		protected static ArrayList loaded_modules;
+		
 		protected ArrayList _search_path;
 		
-		protected DepResolver _resolver;
+		protected ModuleController _controller;
 		
-		public ModuleLoader (ArrayList search_path, DepResolver resolver) {
+		public ModuleLoader (ArrayList search_path, ModuleController controller) {
 			_search_path = search_path;
-			_resolver = resolver;
+			_controller = controller;
 		}
 		
 		// Loads the content of a file to a byte array. 
@@ -68,7 +70,7 @@
 						string _f = f.Replace (s, "").Replace ("/", "");
 						Console.WriteLine ("Checking {0} against {1} ({2}) (Result: {3})", _name, _f, 
 							_f.Substring (0, _f.Length - 4), (_f.Substring (0, _f.Length - 4) == _name));
-						if (_f.Substring (0, _f.Length - 4) == _name) {
+						if (_f.Substring (0, _f.Length - 4).IndexOf (_name) != -1) {
 							return s + "/" + _f;
 						}
 					}
@@ -88,14 +90,25 @@
 		}
 		
 		public AppDomain LoadModule (ArrayList _parents, string _name, out ModuleInfo _info, bool checking) {
+			return LoadModule (_parents, _name, out _info, checking, true);
+		}
+		
+		public Assembly GetAssembly (AppDomain _domain, string _name) {
+			foreach (Assembly _asm in _domain.GetAssemblies ()) {
+				if (_asm.GetName ().Name == _name)
+					return _asm;
+			}
+			return null;
+		}
+
+		public AppDomain LoadModule (ArrayList _parents, string _name, out ModuleInfo _info, bool checking, bool depcheck) {
+			Console.WriteLine ("LoadModule:  Trying to load {0}", _name);
+
 			// Okay, this is tricky.  First, we have to load the module into a temp domain
 			// to retrieve its module info.  Then, we have to attempt to resolve the dependencies.
 			// This is going to be fun.  Heh.
 			if (_parents == null)
 				_parents = new ArrayList ();
-				
-			// This is technically a parent of any depending module.
-			_parents.Add (_name);
 			
 			// Try to find the module on the search path.
 			string _filename = SearchForModule (_name);
@@ -105,7 +118,7 @@
 				
 			// Okay, well, now we know the module exists at least in the file (we hope its a proper dll, but we'll see :).  Now we
 			// need to create the temporary AppDomain and load it to get the info from it.
-			AppDomain _tempDomain = AppDomain.CreateDomain ("_temp_" + _name);
+			AppDomain _tempDomain = AppDomain.CreateDomain (_name);
 			
 			// This is dirty.  I hate me.
 			byte[] _raw_bytes = LoadRawFile (_filename);	
@@ -120,52 +133,56 @@
 			try {
 				_tempDomain.Load (_raw_bytes);
 			} catch (BadImageFormatException e) {
+				AppDomain.Unload (_tempDomain);
 				throw new ModuleImageException (e.Message);
 			}
 			
 			// Okay, now lets grab the module info from the assembly attributes.
-			Assembly _asm = _tempDomain.GetAssemblies ()[0];
+			Assembly _asm = GetAssembly (_tempDomain, _name);
 			
 			try {
 				_info = new ModuleInfo (_asm);
 			} catch (ModuleInfoException e) {
+				AppDomain.Unload (_tempDomain);
 				throw new InvalidModuleException (e.Message);
 			}
 			
-			// unload the temp domain since its unneeded now.
-			
-			AppDomain.Unload (_tempDomain);
-			
 			// okay, now we've got the info, let's do some magic with the dependencies.
 			// this will recursively load all of the appropriate assemblies as per the parsed
 			// depedency tree.  It will take into account dependency operators, such as AND, OR
 			// OPT (optional).  Very intelligent stuff.  Of course, if there are no depends,
 			// this just simply returns.  This will of course continue updating the parents as needed
 			// since each time a new module is loaded, the resolver is recursively called until
-			// a module is found.  This is cool.  What this will do is call this method with
+			// a module with no dependencies is found.  This is cool.  What this will do is call this method with
 			// checking=true, which will cause it to just return if the module suceeds.  This way
 			// we can ensure we don't load unneeded module Z that is a dependency of X which depends
 			// on Y, because if Z suceeds but Y fails, we don't want X, Y, or Z to fail.  This way,
 			// we can ensure the entire tree can be loaded first (this does take into account already
 			// loaded assemblies).
-			_resolver.ResolveCheck (_parents, _info);
+			if (depcheck)
+			{
+				DepResolver _resolver = new DepResolver (_controller, _search_path);
+			
+				try {
+					_resolver.Resolve (_parents, _info);
+				} catch (Exception e) {
+					AppDomain.Unload (_tempDomain);
+					throw e;
+				}
+			}
 		
 			if (checking)
+			{
+				AppDomain.Unload (_tempDomain);
 				return null;
+			}
 							
 			// okay, they're good, lets load the suckers.
-			_resolver.Resolve (_parents, _info);
-			
 			// alright, we've got them all loaded, they exist in the assembly map.
 			// now we create the *real* app domain.
-			AppDomain _domain = AppDomain.CreateDomain (_name);
-			
-			// let's load this assembly into the real app domain.
-			Console.WriteLine ("_domain.Load");
-			_domain.Load (_raw_bytes);
-			
+						
 			// We can't do any more with this.
-			return _domain;
+			return _tempDomain;
 		}
 	}
 }

Added: trunk/src/NModule.Core.Loader/NModule.Core.Loader.build
===================================================================
--- trunk/src/NModule.Core.Loader/NModule.Core.Loader.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Loader/NModule.Core.Loader.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,52 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Core.Loader" default="compile" basedir=".">
+  <description>NModule.Core.Loader build files.</description>
+
+  <include buildfile="../../NModule.build.include"/>
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/NModule.Core.Loader.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir=".">
+        <include name="*.cs"/>
+      </sources>
+    <references basedir="${current.build.dir}">
+      <include name="NModule.Core.dll" />
+      <include name="NModule.Core.Module.dll" />
+      <include name="NModule.Dependency.Core.dll" />
+    </references>
+    </csc>
+  </target>
+</project>

Modified: trunk/src/NModule.Core.Module/ModuleInfo.cs
===================================================================
--- trunk/src/NModule.Core.Module/ModuleInfo.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Module/ModuleInfo.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -36,7 +36,7 @@
 	using NModule.Dependency.Core;
 	using NModule.Dependency.Parser;
 	using NModule.Core;
-	
+		
 	public class ModuleInfo {
 		// name
 		protected string _name;
@@ -50,14 +50,68 @@
 		// roles
 		protected string _roles;
 		
+		protected string _depstring;
+		
 		// owner
 		protected Assembly _owner;
 		
+		protected string OpToString (DepOps _op) {
+			switch (_op)
+			{
+				case DepOps.And:
+					return "&&";
+				case DepOps.Equal:
+					return "==";
+				case DepOps.GreaterThan:
+					return ">>";
+				case DepOps.GreaterThanEqual:
+					return ">=";
+				case DepOps.LessThan:
+					return "<<";
+				case DepOps.LessThanEqual:
+					return "<=";
+				case DepOps.Loaded:
+					return "##";
+				case DepOps.Not:
+					return "!!";
+				case DepOps.NotEqual:
+					return "!=";
+				case DepOps.Opt:
+					return "??";
+				case DepOps.Or:
+					return "||";
+				case DepOps.Xor:
+					return "^^";
+			}
+			
+			return "";
+		}
+		
+		protected void PrintDepTree (DepNode _x, int nest) {
+			if (_x == null)
+				return;
+
+			for (int i = 0; i < nest; i++)
+				Console.Write ("  ");
+				
+			Console.Write ("{0}", OpToString (_x.DepOp));
+			
+			if (_x.Constraint != null) {
+				Console.WriteLine (" {0}", _x.Constraint.Name);
+			}
+			else
+				Console.WriteLine (); // Make the tree pretty.
+			foreach (DepNode _d in _x.Children) {
+				PrintDepTree (_d, nest + 1);
+			}
+		}
+		
 		public ModuleInfo (Assembly _asm) {
 			_name = _asm.GetName().Name;
 			_version = DepVersion.VersionParse (_asm.GetName().Version.ToString ());
 			
 			ModuleDependencyAttribute _depAttr;
+			ModuleRoleAttribute _roleAttr;
 			
 			try {
 				_depAttr = ((ModuleDependencyAttribute)(_asm.GetCustomAttributes (typeof (ModuleDependencyAttribute), false)[0]));
@@ -73,10 +127,21 @@
 				_dependencies = new DepNode ();
 				
 				_parser.expr (_dependencies);
+				
+				Console.WriteLine ("Dependency tree for {0}", _name);
+				Console.WriteLine ("This should match {0}", _depAttr.DepString);
+				Console.WriteLine ("----------------------------------------------------");
+				PrintDepTree (_dependencies, 0);
+				Console.WriteLine ("----------------------------------------------------");
+				_depstring = _depAttr.DepString;
 			} else
 				_dependencies = null;
 			
-			ModuleRoleAttribute _roleAttr = ((ModuleRoleAttribute)(_asm.GetCustomAttributes (typeof (ModuleRoleAttribute), false)[0]));
+			try {
+				_roleAttr = ((ModuleRoleAttribute)(_asm.GetCustomAttributes (typeof (ModuleRoleAttribute), false)[0]));
+			} catch (IndexOutOfRangeException) {
+				_roleAttr = null;
+			}
 			
 			if (_roleAttr != null) {
 				_roles = _roleAttr.Roles;
@@ -115,5 +180,10 @@
 				return _owner;
 			}
 		}
+		
+		public string ToString () {
+			return string.Format ("ModuleInfo (Name = {0}, Version = {1}, Dependencies = {2}, Roles = {3}, Owner = {4})",
+				Name, Version.ToString(), _depstring, Roles, Owner.GetName().Name);
+		}
 	}		
 }

Added: trunk/src/NModule.Core.Module/NModule.Core.Module.build
===================================================================
--- trunk/src/NModule.Core.Module/NModule.Core.Module.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Core.Module/NModule.Core.Module.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,52 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Core.Module" default="compile" basedir=".">
+  <description>NModule.Core.Module build files.</description>
+
+  <include buildfile="../../NModule.build.include"/>
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/NModule.Core.Module.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir=".">
+        <include name="*.cs"/>
+      </sources>
+       <references basedir="${current.build.dir}">
+      <include name="NModule.Core.dll" />
+      <include name="NModule.Dependency.Core.dll" />
+      <include name="NModule.Dependency.Parser.dll" />
+    </references>
+    </csc>
+  </target>
+</project>

Modified: trunk/src/NModule.Dependency.Core/DepOps.cs
===================================================================
--- trunk/src/NModule.Dependency.Core/DepOps.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Core/DepOps.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -28,5 +28,5 @@
 //
 
 namespace NModule.Dependency.Core {
-	public enum DepOps { Not, And, Or, Xor, Opt, Equal, NotEqual, LessThanEqual, LessThan, GreaterThanEqual, GreaterThan, Loaded };
+	public enum DepOps { Not, And, Or, Xor, Opt, Equal, NotEqual, LessThanEqual, LessThan, GreaterThanEqual, GreaterThan, Loaded, Null };
 }

Modified: trunk/src/NModule.Dependency.Core/DepVersion.cs
===================================================================
--- trunk/src/NModule.Dependency.Core/DepVersion.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Core/DepVersion.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -112,5 +112,9 @@
 				ver.Revision = Int32.Parse(vparts[3]);
 			return ver;
 		}
+		
+		public string ToString ( ) {
+			return string.Format ("{0}:{1}:{2}:{3}", Major, Minor, Build, Revision);
+		}
 	}
 }

Added: trunk/src/NModule.Dependency.Core/NModule.Dependency.Core.build
===================================================================
--- trunk/src/NModule.Dependency.Core/NModule.Dependency.Core.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Core/NModule.Dependency.Core.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,50 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Dependency.Core" default="compile" basedir=".">
+  <description>NModule.Dependency.Core build files.</description>
+
+  <include buildfile="../../NModule.build.include"/>
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/NModule.Dependency.Core.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir=".">
+        <include name="*.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Core.dll" />
+      </references>
+    </csc>
+  </target>
+</project>

Modified: trunk/src/NModule.Dependency.Parser/DepLexer.cs
===================================================================
--- trunk/src/NModule.Dependency.Parser/DepLexer.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/DepLexer.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,4 +1,4 @@
-// $ANTLR 2.7.5 (20050516): "nmodule-dep.g" -> "DepLexer.cs"$
+// $ANTLR 2.7.5 (20050704): "nmodule-dep.g" -> "DepLexer.cs"$
 
 //
 // ANTLR Generated Files.
@@ -156,15 +156,15 @@
 							theRetToken = returnToken_;
 							break;
 						}
-						case '=':
+						case '?':
 						{
-							mEQ(true);
+							mOPT(true);
 							theRetToken = returnToken_;
 							break;
 						}
-						case '?':
+						case '=':
 						{
-							mOPT(true);
+							mEQ(true);
 							theRetToken = returnToken_;
 							break;
 						}
@@ -344,6 +344,20 @@
 		returnToken_ = _token;
 	}
 	
+	public void mOPT(bool _createToken) //throws RecognitionException, CharStreamException, TokenStreamException
+{
+		int _ttype; IToken _token=null; int _begin=text.Length;
+		_ttype = OPT;
+		
+		match("??");
+		if (_createToken && (null == _token) && (_ttype != Token.SKIP))
+		{
+			_token = makeToken(_ttype);
+			_token.setText(text.ToString(_begin, text.Length-_begin));
+		}
+		returnToken_ = _token;
+	}
+	
 	public void mEQ(bool _createToken) //throws RecognitionException, CharStreamException, TokenStreamException
 {
 		int _ttype; IToken _token=null; int _begin=text.Length;
@@ -428,20 +442,6 @@
 		returnToken_ = _token;
 	}
 	
-	public void mOPT(bool _createToken) //throws RecognitionException, CharStreamException, TokenStreamException
-{
-		int _ttype; IToken _token=null; int _begin=text.Length;
-		_ttype = OPT;
-		
-		match("??");
-		if (_createToken && (null == _token) && (_ttype != Token.SKIP))
-		{
-			_token = makeToken(_ttype);
-			_token.setText(text.ToString(_begin, text.Length-_begin));
-		}
-		returnToken_ = _token;
-	}
-	
 	public void mLD(bool _createToken) //throws RecognitionException, CharStreamException, TokenStreamException
 {
 		int _ttype; IToken _token=null; int _begin=text.Length;
@@ -631,6 +631,13 @@
 			}
 			break;
 		}
+		case '-':
+		{
+			{
+				match('-');
+			}
+			break;
+		}
 		default:
 		{
 			throw new NoViableAltForCharException(cached_LA1, getFilename(), getLine(), getColumn());
@@ -659,11 +666,11 @@
 				}
 				else
 				{
-					goto _loop63_breakloop;
+					goto _loop64_breakloop;
 				}
 				
 			}
-_loop63_breakloop:			;
+_loop64_breakloop:			;
 		}    // ( ... )*
 		if (_createToken && (null == _token) && (_ttype != Token.SKIP))
 		{
@@ -689,11 +696,11 @@
 				}
 				else
 				{
-					goto _loop66_breakloop;
+					goto _loop67_breakloop;
 				}
 				
 			}
-_loop66_breakloop:			;
+_loop67_breakloop:			;
 		}    // ( ... )*
 		if (_createToken && (null == _token) && (_ttype != Token.SKIP))
 		{
@@ -750,7 +757,7 @@
 	
 	private static long[] mk_tokenSet_0_()
 	{
-		long[] data = { 287948901175001088L, 576460745995190270L, 0L, 0L};
+		long[] data = { 287984085547089920L, 576460745995190270L, 0L, 0L};
 		return data;
 	}
 	public static readonly BitSet tokenSet_0_ = new BitSet(mk_tokenSet_0_());

Modified: trunk/src/NModule.Dependency.Parser/DepParser.cs
===================================================================
--- trunk/src/NModule.Dependency.Parser/DepParser.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/DepParser.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,4 +1,4 @@
-// $ANTLR 2.7.5 (20050516): "nmodule-dep.g" -> "DepParser.cs"$
+// $ANTLR 2.7.5 (20050704): "nmodule-dep.g" -> "DepParser.cs"$
 
 //
 // ANTLR Generated Files.
@@ -172,6 +172,7 @@
 		try {      // for error handling
 			match(LPAREN);
 			match(NOTO);
+			parent.DepOp = DepOps.Not;
 			{ // ( ... )+
 				int _cnt6=0;
 				for (;;)
@@ -213,6 +214,7 @@
 		try {      // for error handling
 			match(LPAREN);
 			match(AND);
+			parent.DepOp = DepOps.And;
 			{ // ( ... )+
 				int _cnt10=0;
 				for (;;)
@@ -254,6 +256,7 @@
 		try {      // for error handling
 			match(LPAREN);
 			match(OR);
+			parent.DepOp = DepOps.Or;
 			{ // ( ... )+
 				int _cnt14=0;
 				for (;;)
@@ -295,6 +298,7 @@
 		try {      // for error handling
 			match(LPAREN);
 			match(XOR);
+			parent.DepOp = DepOps.Xor;
 			{ // ( ... )+
 				int _cnt18=0;
 				for (;;)
@@ -336,6 +340,7 @@
 		try {      // for error handling
 			match(LPAREN);
 			match(OPT);
+			parent.DepOp = DepOps.Opt;
 			{ // ( ... )+
 				int _cnt22=0;
 				for (;;)

Modified: trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.cs
===================================================================
--- trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,4 +1,4 @@
-// $ANTLR 2.7.5 (20050516): "nmodule-dep.g" -> "DepParser.cs"$
+// $ANTLR 2.7.5 (20050704): "nmodule-dep.g" -> "DepParser.cs"$
 
 //
 // ANTLR Generated Files.

Modified: trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.txt
===================================================================
--- trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.txt	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/DepParserTokenTypes.txt	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,4 +1,4 @@
-// $ANTLR 2.7.5 (20050516): nmodule-dep.g -> DepParserTokenTypes.txt$
+// $ANTLR 2.7.5 (20050704): nmodule-dep.g -> DepParserTokenTypes.txt$
 DepParser    // output token vocab name
 LPAREN=4
 NOTO=5

Added: trunk/src/NModule.Dependency.Parser/NModule.Dependency.Parser.build
===================================================================
--- trunk/src/NModule.Dependency.Parser/NModule.Dependency.Parser.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/NModule.Dependency.Parser.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,55 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Dependency.Parser" default="compile" basedir=".">
+  <description>NModule.Dependency.Parser build files.</description>
+
+  <include buildfile="../../NModule.build.include"/>
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <exec program="antlr">
+      <arg value="nmodule-dep.g"/>
+    </exec>
+    <csc target="library"
+        output="${current.build.dir}/NModule.Dependency.Parser.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir=".">
+        <include name="*.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+      	<include name="NModule.Core.dll" />
+	      <include name="NModule.Dependency.Core.dll" />
+        <include name="antlr-runtime.dll" />
+      </references>
+    </csc>
+  </target>
+</project>

Modified: trunk/src/NModule.Dependency.Parser/nmodule-dep.g
===================================================================
--- trunk/src/NModule.Dependency.Parser/nmodule-dep.g	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Dependency.Parser/nmodule-dep.g	2005-07-04 17:41:09 UTC (rev 34)
@@ -89,23 +89,23 @@
 	;
 
 notexpr[DepNode parent]
-	: LPAREN! NOTO (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
+	: LPAREN! NOTO { parent.DepOp = DepOps.Not; } (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
 	;
 
 andexpr[DepNode parent]
-	: LPAREN! AND (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
+	: LPAREN! AND { parent.DepOp = DepOps.And; } (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
 	;
 
 orexpr[DepNode parent]
-	: LPAREN! OR (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
+	: LPAREN! OR { parent.DepOp = DepOps.Or; } (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
 	;
 
 xorexpr[DepNode parent]
-	: LPAREN! XOR (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
+	: LPAREN! XOR { parent.DepOp = DepOps.Xor; } (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
 	;
 
 optexpr[DepNode parent]
-	: LPAREN! OPT (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
+	: LPAREN! OPT { parent.DepOp = DepOps.Opt; } (oexpr[parent, false]|({DepNode child = parent.CreateNewChild(); } cexpr[child]))+ RPAREN!
 	;
 
 // LPAREN! ((EQ^|NEQ^|LTE^|LS^|GTE^|GT^|LD^) iexpr) RPAREN!
@@ -209,6 +209,7 @@
 ID_LETTER
 	: ID_START_LETTER
 	| ('0' .. '9')
+	| ('-')
 	;
 	
 protected

Added: trunk/src/NModule.Src.build
===================================================================
--- trunk/src/NModule.Src.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/NModule.Src.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,63 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Src" default="compile-all" basedir=".">
+  <description>NModule source build files.</description>
+
+  <!-- properties -->
+  <property name="debug" value="true" overwrite="false" />
+  <property name="release" value="false" overwrite="false" />
+  <property name="strong" value="false" overwrite="false" />
+
+  <target name="compile-all" depends="NModule.Core,NModule.Dependency.Core,antlr-runtime,NModule.Dependency.Parser,NModule.Core.Module,NModule.Core.Loader" />
+
+  <target name="NModule.Core">
+    <nant buildfile="NModule.Core/NModule.Core.build" />
+  </target>
+
+  <target name="NModule.Dependency.Core" depends="NModule.Core">
+    <nant buildfile="NModule.Dependency.Core/NModule.Dependency.Core.build" />
+  </target>
+
+  <target name="antlr-runtime">
+    <nant buildfile="antlr-runtime/antlr-runtime.build" />
+  </target>
+
+  <target name="NModule.Dependency.Parser" depends="NModule.Core,NModule.Dependency.Core,antlr-runtime">
+    <nant buildfile="NModule.Dependency.Parser/NModule.Dependency.Parser.build" />
+  </target>
+
+  <target name="NModule.Core.Module" depends="NModule.Core,NModule.Dependency.Core,NModule.Dependency.Parser">
+    <nant buildfile="NModule.Core.Module/NModule.Core.Module.build" />
+  </target>
+
+  <target name="NModule.Core.Loader" depends="NModule.Core,NModule.Core.Module,NModule.Dependency.Core">
+    <nant buildfile="NModule.Core.Loader/NModule.Core.Loader.build" />
+  </target>
+</project>

Added: trunk/src/antlr-runtime/antlr-runtime.build
===================================================================
--- trunk/src/antlr-runtime/antlr-runtime.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/src/antlr-runtime/antlr-runtime.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,47 @@
+<!--
+antlr-runtime.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="antlr-runtime" default="compile" basedir=".">
+  <description>antlr-runtime build files.</description>
+
+  <include buildfile="../../NModule.build.include"/>
+  
+  <property name="project.src.dir" value="../"
+    unless="${property::exists('project.src.dir')}"/>
+
+  <target name="compile" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/antlr-runtime.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir=".">
+        <include name="**/*.cs" />
+      </sources>
+    </csc>
+  </target>
+</project>

Modified: trunk/test/NModule.Core.Test/NModule.Core.Test.mdp
===================================================================
--- trunk/test/NModule.Core.Test/NModule.Core.Test.mdp	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/NModule.Core.Test.mdp	2005-07-04 17:41:09 UTC (rev 34)
@@ -27,6 +27,6 @@
   <Contents>
     <File name="./AssemblyInfo.cs" subtype="Code" buildaction="Compile" />
     <File name="./TESTS" subtype="Code" buildaction="Compile" />
-    <File name="./nm-ld.cs" subtype="Code" buildaction="Compile" />
+    <File name="./NModuleTests.cs" subtype="Code" buildaction="Compile" />
   </Contents>
 </Project>
\ No newline at end of file

Added: trunk/test/NModule.Core.Test/NModuleTests.cs
===================================================================
--- trunk/test/NModule.Core.Test/NModuleTests.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/NModuleTests.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,280 @@
+//
+// NModuleTests.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+namespace NModule.Core.Test {
+
+	using System;
+	using System.Reflection;
+	using System.Collections;
+	
+	using NModule.Core.Loader;
+	using NModule.Core;
+	using NModule.Core.Module;
+	using NModule.Dependency.Core;
+	using NModule.Dependency.Parser;
+	using NModule.Dependency.Resolver;
+	
+	using NUnit.Framework;
+	
+	[TestFixture]
+	public class NModuleTests {
+	
+		public NModuleTests () {
+		}
+		
+		// nm-ld-01 - Loading with no dependencies, single dir search path.
+		[Test]
+		public void nm_ld_01 () {
+			Console.WriteLine ("nm_ld_01");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld/");
+			
+			_mc.LoadModule ("nm-ld-01");
+		}
+		
+		// nm-ld-02 - Loading with no dependencies, single dir search path, not found.
+		[Test]
+		[ExpectedException (typeof (ModuleNotFoundException))]
+		public void nm_ld_02 () {
+			Console.WriteLine ("nm_ld_02");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			
+			_mc.LoadModule ("nm-ld-02");
+		}
+		
+		// nm-ld-03 - Loading with no dependencies, multiple dir search path, first dir.
+		[Test]
+		public void nm_ld_03 () {
+			Console.WriteLine ("nm_ld_03");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-03");
+		}
+		
+		// nm-ld-04 - Loading with no dependencies, multiple dir search path, middle dir.
+		[Test]
+		public void nm_ld_04 () {
+			Console.WriteLine ("nm_ld_04");
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-04");
+		}
+		
+		// nm-ld-05 - Loading with no dependencies, multiple dir search path, last dir.
+		[Test]
+		public void nm_ld_05 () {
+			Console.WriteLine ("nm_ld_05");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			_mc.SearchPath.Add ("data/nm-ld");
+			
+			_mc.LoadModule ("nm-ld-05");
+		}
+		
+		// nm-ld-06 - Loading with no dependencies, multiple dir search path, not found.
+		[Test]
+		[ExpectedException (typeof (ModuleNotFoundException))]
+		public void nm_ld_06 () {
+			Console.WriteLine ("nm_ld_06");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-06");
+		}
+		
+		// nm-ul-01 - Unloading with no dependencies
+		[Test]
+		public void nm_ul_01 () {
+			Console.WriteLine ("nm_ul_01");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ul");
+			
+			_mc.LoadModule ("nm-ul-01");
+			
+			_mc.UnloadModule ("nm-ul-01");
+		}
+		
+		// nm-ul-02 - Unloading with ref count > 1
+		[Test]
+		[ExpectedException (typeof (DomainStillReferencedException))]
+		public void nm_ul_02 () {
+			Console.WriteLine ("nm_ul_02");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ul");
+			
+			_mc.LoadModule ("nm-ul-02");
+			
+			_mc.LoadModule ("nm-ul-02");
+			
+			_mc.UnloadModule ("nm-ul-02");
+		}
+		
+		// This is a huge section.
+		
+		/**
+		 * Combinations to be tested:
+		 *   Valid-combination operators: && || ^^ !! ??
+		 *   Valid-singleton operators: == != << <= >> >= ##
+		 *   (==)
+		 *   (!=)
+		 *   (<<)
+		 *   (>>)
+		 *   (<=)
+		 *   (>=)
+		 *   (##)
+		 *   (&& (==) (>=))
+		 *   (|| (>>) (<<))
+		 *   (^^ (>>) (!=))
+		 *   (!! (==))
+		 *   (?? (>=))
+		 *   (&& (|| (==) (!=)) (?? (##)))
+		 *   (|| (&& (##) (##)) (!! (!=)))
+		 **/
+		[Test]
+		public void nm_dr_01 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-01a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01b"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01d"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-01c"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01e"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01f"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01g"));
+		}
+		
+		//[Test]
+		public void nm_dr_02 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-02a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-02b"));
+		}
+		
+		//[Test]
+		public void nm_dr_03 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-03a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-03b"));
+		}
+		
+		//[Test]
+		public void nm_dr_04 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-04a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-04b"));
+		}
+		
+		//[Test]
+		public void nm_dr_05 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-05a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-05b"));
+		}
+		
+		//[Test]
+		public void nm_dr_06 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-06a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-06b"));
+		}
+		
+		//[Test]
+		public void nm_dr_07 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-07a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-07b"));
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/NModuleTests.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/.monkeywrench.log
===================================================================
(Binary files differ)


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/.monkeywrench.log
___________________________________________________________________
Name: svn:mime-type
   + font/ttf

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(&& (&& (== nm-dr-01b 1.0) (>> nm-dr-01d 1.2)) (?? (<< nm-dr-01c 1.0)))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01a_module {
+		public nm_dr_01a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(## nm-dr-01e)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01b_module {
+		public nm_dr_01b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01c_module {
+		public nm_dr_01c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.3.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01d_module {
+		public nm_dr_01d_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01d.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(&& (## nm-dr-01f) (## nm-dr-01g))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01e_module {
+		public nm_dr_01e_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01e.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01f_module {
+		public nm_dr_01f_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01f.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_01g_module {
+		public nm_dr_01g_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01g.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Deleted: trunk/test/NModule.Core.Test/nm-ld.cs
===================================================================
--- trunk/test/NModule.Core.Test/nm-ld.cs	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Core.Test/nm-ld.cs	2005-07-04 17:41:09 UTC (rev 34)
@@ -1,163 +0,0 @@
-//
-// nm-ld.cs
-//
-// Author:
-//     Michael Tindal <urilith at gentoo.org>
-//
-// Copyright (C) 2005 Michael Tindal and the individuals listed on
-// the ChangeLog entries.
-//
-// Permission is hereby granted, free of charge, to any person obtaining
-// a copy of this software and associated documentation files (the
-// "Software"), to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to
-// permit persons to whom the Software is furnished to do so, subject to
-// the following conditions:
-// 
-// The above copyright notice and this permission notice shall be
-// included in all copies or substantial portions of the Software.
-// 
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-//
-
-namespace NModule.Core.Test {
-
-	using System;
-	using System.Reflection;
-	using System.Collections;
-	
-	using NModule.Core.Loader;
-	using NModule.Core;
-	using NModule.Core.Module;
-	using NModule.Dependency.Core;
-	using NModule.Dependency.Parser;
-	using NModule.Dependency.Resolver;
-	
-	using NUnit.Framework;
-	
-	[TestFixture]
-	public class NModuleTests {
-	
-		public NModuleTests () {
-		}
-		
-		// nm-ld-01 - Loading with no dependencies, single dir search path.
-		[Test]
-		public void nm_ld_01 () {
-			Console.WriteLine ("nm_ld_01");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld/");
-			
-			_mc.LoadModule ("nm-ld-01");
-		}
-		
-		// nm-ld-02 - Loading with no dependencies, single dir search path, not found.
-		[Test]
-		[ExpectedException (typeof (ModuleNotFoundException))]
-		public void nm_ld_02 () {
-			Console.WriteLine ("nm_ld_02");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			
-			_mc.LoadModule ("nm-ld-02");
-		}
-		
-		// nm-ld-03 - Loading with no dependencies, multiple dir search path, first dir.
-		[Test]
-		public void nm_ld_03 () {
-			Console.WriteLine ("nm_ld_03");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-03");
-		}
-		
-		// nm-ld-04 - Loading with no dependencies, multiple dir search path, middle dir.
-		[Test]
-		public void nm_ld_04 () {
-			Console.WriteLine ("nm_ld_04");
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-04");
-		}
-		
-		// nm-ld-05 - Loading with no dependencies, multiple dir search path, last dir.
-		[Test]
-		public void nm_ld_05 () {
-			Console.WriteLine ("nm_ld_05");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			_mc.SearchPath.Add ("data/nm-ld");
-			
-			_mc.LoadModule ("nm-ld-05");
-		}
-		
-		// nm-ld-06 - Loading with no dependencies, multiple dir search path, not found.
-		[Test]
-		[ExpectedException (typeof (ModuleNotFoundException))]
-		public void nm_ld_06 () {
-			Console.WriteLine ("nm_ld_06");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-06");
-		}
-		
-		// nm-ul-01 - Unloading with no dependencies
-		[Test]
-		public void nm_ul_01 () {
-			Console.WriteLine ("nm_ul_01");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ul");
-			
-			_mc.LoadModule ("nm-ul-01");
-			
-			_mc.UnloadModule ("nm-ul-01");
-		}
-		
-		// nm-ul-02 - Unloading with ref count > 1
-		[Test]
-		[ExpectedException (typeof (DomainStillReferencedException))]
-		public void nm_ul_02 () {
-			Console.WriteLine ("nm_ul_02");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ul");
-			
-			_mc.LoadModule ("nm-ul-02");
-			
-			_mc.LoadModule ("nm-ul-02");
-			
-			_mc.UnloadModule ("nm-ul-02");
-		}
-	}
-}

Added: trunk/test/NModule.Test.build
===================================================================
--- trunk/test/NModule.Test.build	2005-06-30 07:50:54 UTC (rev 33)
+++ trunk/test/NModule.Test.build	2005-07-04 17:41:09 UTC (rev 34)
@@ -0,0 +1,344 @@
+<!--
+NModule.build
+
+Author:
+    Michael Tindal <urilith at gentoo.org>
+
+Copyright (C) 2005 Michael Tindal and the individuals listed on
+the ChangeLog entries.
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+"Software"), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<project name="NModule.Test" default="compile-all" basedir=".">
+  <description>NModule test build files.</description>
+
+  <include buildfile="../NModule.build.include" />
+  
+  
+  <!-- properties -->
+  <target name="set-test-dirs" depends="set-build-dir">
+    <property name="project.test.base.dir" value="${path::combine(project.base.dir,'test')}" />
+    <property name="project.test.dir" value="${path::combine(project.test.base.dir,'NModule.Core.Test')}" />
+    <property name="project.test.data.dir" value="${path::combine(current.build.dir,'data')}" />
+    <property name="project.test.base.data.dir" value="${path::combine(project.test.dir,'data')}" />
+    <property name="project.test.data.src.dir" value="${path::combine(project.test.base.data.dir,'src')}" />
+    <property name="nm-ld-dir" value="${path::combine(project.test.data.dir,'nm-ld')}" />
+    <property name="nm-ld-2-dir" value="${path::combine(project.test.data.dir,'nm-ld-2')}" />
+    <property name="nm-ld-3-dir" value="${path::combine(project.test.data.dir,'nm-ld-3')}" />
+    <property name="nm-ul-dir" value="${path::combine(project.test.data.dir,'nm-ul')}" />
+    <property name="nm-dr-dir" value="${path::combine(project.test.data.dir,'nm-dr')}" />
+  </target>
+  
+  <target name="compile-all" depends="set-test-dirs,make-test-dirs,nm-ld,nm-ul,nm-dr,NModule.Core.Test" />
+
+  <target name="make-test-dirs" depends="make-nm-ld-dir,make-nm-ul-dir,make-nm-dr-dir" />
+
+  <target name="make-nm-ld-dir">
+    <mkdir dir="${nm-ld-dir}" unless="${directory::exists(nm-ld-dir)}" />
+    <mkdir dir="${nm-ld-2-dir}" unless="${directory::exists(nm-ld-2-dir)}" />
+    <mkdir dir="${nm-ld-3-dir}" unless="${directory::exists(nm-ld-3-dir)}" />
+  </target>
+
+  <target name="make-nm-ul-dir">
+    <mkdir dir="${nm-ul-dir}" unless="${directory::exists(nm-ul-dir)}" />
+  </target>
+
+  <target name="make-nm-dr-dir">
+    <mkdir dir="${nm-dr-dir}" unless="${directory::exists(nm-dr-dir)}" />
+  </target>
+
+  <target name="nm-ld" depends="nm-ld-01,nm-ld-03,nm-ld-04,nm-ld-05" />
+    
+  <target name="nm-ld-01">
+    <csc target="library"
+        output="${nm-ld-dir}/nm-ld-01.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ld')}">
+        <include name="nm-ld-01.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-ld-03">
+    <csc target="library"
+        output="${nm-ld-dir}/nm-ld-03.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ld')}">
+        <include name="nm-ld-03.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-ld-04">
+    <csc target="library"
+        output="${nm-ld-dir}/nm-ld-04.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ld')}">
+        <include name="nm-ld-04.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-ld-05">
+    <csc target="library"
+        output="${nm-ld-dir}/nm-ld-05.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ld')}">
+        <include name="nm-ld-05.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-ul" depends="nm-ul-01,nm-ul-02" />
+  
+  <target name="nm-ul-01">
+    <csc target="library"
+        output="${nm-ul-dir}/nm-ul-01.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ul')}">
+        <include name="nm-ul-01.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-ul-02">
+    <csc target="library"
+        output="${nm-ul-dir}/nm-ul-02.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-ul')}">
+        <include name="nm-ul-02.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr" depends="nm-dr-01a,nm-dr-01b,nm-dr-01c,nm-dr-01d,nm-dr-01e,nm-dr-01f,nm-dr-01g" />
+
+  <target name="nm-dr-01a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-01b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-01c">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01c.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01c.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-01d">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01d.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01d.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-01e">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01e.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01e.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-01f">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01f.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01f.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-01g">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-01g.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-01g.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <assemblyfileset id="nunit.framework">
+    <include name="nunit.framework.dll" />
+  </assemblyfileset>
+  <target name="NModule.Core.Test" depends="set-build-dir">
+    <csc target="library"
+        output="${current.build.dir}/NModule.Core.Test.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${project.test.dir}">
+        <include name="*.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="nunit.framework.dll" />
+      </references>
+    </csc>
+  </target>
+
+</project>



From urilith at berlios.de  Mon Jul  4 19:42:53 2005
From: urilith at berlios.de (Michael Tindal at BerliOS)
Date: Mon, 4 Jul 2005 19:42:53 +0200
Subject: [nmodule-commits] r35 - trunk
Message-ID: <200507041742.j64HgrAC008274@sheep.berlios.de>

Author: urilith
Date: 2005-07-04 19:42:51 +0200 (Mon, 04 Jul 2005)
New Revision: 35

Modified:
   trunk/
   trunk/ChangeLog
Log:
 r139 at dreamshadow:  urilith | 2005-07-04 12:40:51 -0500
 2005-07-04 Michael Tindal <urilith at gentoo.org>
 
   *******************
   ***** RELEASE *****
   *******************
   *
   ***
   * Tag 0.2 release.
   ***
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:138
   + b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:139

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-07-04 17:41:09 UTC (rev 34)
+++ trunk/ChangeLog	2005-07-04 17:42:51 UTC (rev 35)
@@ -1,5 +1,15 @@
 2005-07-04 Michael Tindal <urilith at gentoo.org>
 
+        *******************
+        ***** RELEASE *****
+        *******************
+        *
+        ***
+        * Tag 0.2 release.
+        ***
+	
+2005-07-04 Michael Tindal <urilith at gentoo.org>
+
 	* NModule.build: Actually wrote it.
 	* misc/svkchangelog: Ignore ! lines.
 	* src/NModule.Core/NModule.Core.build: NModule.Core build file.



From urilith at berlios.de  Mon Jul  4 19:46:30 2005
From: urilith at berlios.de (Michael Tindal at BerliOS)
Date: Mon, 4 Jul 2005 19:46:30 +0200
Subject: [nmodule-commits] r36 - tags
Message-ID: <200507041746.j64HkU6e011323@sheep.berlios.de>

Author: urilith
Date: 2005-07-04 19:46:29 +0200 (Mon, 04 Jul 2005)
New Revision: 36

Added:
   tags/0.2/
Log:
Tagging 0.2 release

Copied: tags/0.2 (from rev 35, trunk)



From urilith at berlios.de  Mon Jul  4 19:48:00 2005
From: urilith at berlios.de (Michael Tindal at BerliOS)
Date: Mon, 4 Jul 2005 19:48:00 +0200
Subject: [nmodule-commits] r37 - tags
Message-ID: <200507041748.j64Hm0EC013278@sheep.berlios.de>

Author: urilith
Date: 2005-07-04 19:48:00 +0200 (Mon, 04 Jul 2005)
New Revision: 37

Added:
   tags/nmodule-0.2/
Removed:
   tags/0.2/
Log:
Retagging 0.2 release

Copied: tags/nmodule-0.2 (from rev 36, tags/0.2)



From urilith at berlios.de  Tue Jul  5 00:08:40 2005
From: urilith at berlios.de (Michael Tindal at BerliOS)
Date: Tue, 5 Jul 2005 00:08:40 +0200
Subject: [nmodule-commits] r38 - in trunk: . src/NModule.Core.Loader src/NModule.Core.Module test test/NModule.Core.Test test/NModule.Core.Test/data/src/nm-dr
Message-ID: <200507042208.j64M8e4v018128@sheep.berlios.de>

Author: urilith
Date: 2005-07-05 00:08:34 +0200 (Tue, 05 Jul 2005)
New Revision: 38

Added:
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs
   trunk/test/NModule.Core.Test/nm-dr.cs
   trunk/test/NModule.Core.Test/nm-ld.cs
   trunk/test/NModule.Core.Test/nm-ul.cs
Modified:
   trunk/
   trunk/ChangeLog
   trunk/src/NModule.Core.Loader/DepResolver.cs
   trunk/src/NModule.Core.Loader/ModuleController.cs
   trunk/src/NModule.Core.Loader/ModuleLoader.cs
   trunk/src/NModule.Core.Module/ModuleInfo.cs
   trunk/test/NModule.Core.Test/NModule.Core.Test.mdp
   trunk/test/NModule.Core.Test/NModuleTests.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs
   trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs
   trunk/test/NModule.Test.build
Log:
 r142 at dreamshadow:  urilith | 2005-07-04 17:07:03 -0500
 2005-07-04 Michael Tindal <urilith at gentoo.org>
 
   * More bug fixes, rest of the dependency resolution test suite.
   * src/NModule.Core.Loader/DepResolver.cs:
   * src/NModule.Core.Loader/ModuleController.cs:
   * src/NModule.Core.Loader/ModuleLoader.cs:
   * src/NModule.Core.Module/ModuleInfo.cs:
   * test/NModule.Core.Test/NModule.Core.Test.mdp:
   * test/NModule.Core.Test/NModuleTests.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs:
   * test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs:
   * test/NModule.Core.Test/nm-dr.cs:
   * test/NModule.Core.Test/nm-ld.cs:
   * test/NModule.Core.Test/nm-ul.cs:
   * test/NModule.Test.build:
 



Property changes on: trunk
___________________________________________________________________
Name: svk:merge
   - b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:139
   + b743595e-7af7-0310-b020-feacd67de632:/local/nmodule/trunk:142

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/ChangeLog	2005-07-04 22:08:34 UTC (rev 38)
@@ -1,5 +1,53 @@
 2005-07-04 Michael Tindal <urilith at gentoo.org>
 
+	* More bug fixes, rest of the dependency resolution test suite.
+	* src/NModule.Core.Loader/DepResolver.cs: 
+	* src/NModule.Core.Loader/ModuleController.cs: 
+	* src/NModule.Core.Loader/ModuleLoader.cs: 
+	* src/NModule.Core.Module/ModuleInfo.cs: 
+	* test/NModule.Core.Test/NModule.Core.Test.mdp: 
+	* test/NModule.Core.Test/NModuleTests.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs: 
+	* test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs: 
+	* test/NModule.Core.Test/nm-dr.cs: 
+	* test/NModule.Core.Test/nm-ld.cs: 
+	* test/NModule.Core.Test/nm-ul.cs: 
+	* test/NModule.Test.build: 
+
+2005-07-04 Michael Tindal <urilith at gentoo.org>
+
         *******************
         ***** RELEASE *****
         *******************

Modified: trunk/src/NModule.Core.Loader/DepResolver.cs
===================================================================
--- trunk/src/NModule.Core.Loader/DepResolver.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/src/NModule.Core.Loader/DepResolver.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -59,7 +59,7 @@
 			foreach (string s in _search_path) {
 				if (Directory.Exists (s)) {
 					foreach (string f in Directory.GetFiles (s, "*.dll")) {
-						if (f.Substring (0, f.Length - 4).IndexOf (_name) != -1) {
+						if (f.Substring (0, f.Length - 4) == _name) {
 							return s + "/" + f;
 						}
 					}
@@ -84,14 +84,14 @@
 				ArrayList _results = new ArrayList ();
 				ArrayList _c = new ArrayList ();
 				foreach (DepNode _child in _node.Children) {
-					//try {
+					try {
 						OpResolve (_child, _parents, _info, checking, _op);
 						_results.Add (true);
 						_c.Add (_child.Constraint);
-					//} catch (Exception e) {
-					//	_results.Add (false);
-					//	_c.Add (_child.Constraint);
-					//}
+					} catch (Exception e) {
+						_results.Add (false);
+						_c.Add (_child.Constraint);
+					}
 				}
 				
 				switch (_op) {
@@ -106,7 +106,7 @@
 								if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
 									throw new UnresolvedDependencyException (
 										string.Format("The following dependency for the module {0} could not be resolved: (AND operator)\n\t{1} ({2})",
-											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
+											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version.ToString())
 									);
 								}
 							}
@@ -114,12 +114,14 @@
 						}
 						break;
 					case DepOps.Not:
+						if (_results == null)
+							Console.WriteLine ("_results is NULL! (NOT)");
 						foreach (bool _result in _results) {
 							if (_result) {
 								if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
 									throw new UnresolvedDependencyException (
 										string.Format("The following dependency for the module {0} could not be resolved: (NOT operator)\n\t{1} ({2})",
-											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version)
+											_info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version.ToString())
 									);
 								}
 							}
@@ -135,7 +137,7 @@
 							if (_result)
 								_ret = true;
 							else {
-								_urexc.Add (string.Format("{1} ({2})", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version));
+								_urexc.Add (string.Format("{1} ({2})", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version.ToString()));
 							}
 							r++;
 						}
@@ -162,11 +164,11 @@
 						foreach (bool _result in _results) {
 							if (_result) {
 								_xf = false;
-								_xexc.Add (string.Format("{1} ({2}) (True)", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version));
+								_xexc.Add (string.Format("{1} ({2}) (True)", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version.ToString()));
 							}
 							if (!_result) {
 								_xt = false;
-								_xexc.Add (string.Format("{1} ({2}) (False)", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version));
+								_xexc.Add (string.Format("{1} ({2}) (False)", _info.Name, ((DepConstraint)_c[r]).Name, ((DepConstraint)_c[r]).Version.ToString()));
 							}
 							r++;
 						}
@@ -207,32 +209,45 @@
 				
 				Console.WriteLine ("Checking {0}'s version:  Empty {1}", _constraint.Name, IsEmptyVersion (_constraint.Version));
 				Console.WriteLine ("Checking ({0} {1} {2}) Result: {3}", OpToString (_op), _ninfo.Version.ToString(), _constraint.Version.ToString(), VersionMatch (_ninfo.Version, _constraint.Version, _op));
+				
+				Console.WriteLine (">>>>> IsEmptyVersion [BEGIN]");
+				if (!IsEmptyVersion (_constraint.Version)) {
+					bool vmatch = VersionMatch (_ninfo.Version, _constraint.Version, _op);
 					
-				if (!IsEmptyVersion (_constraint.Version)) {
-					if (!VersionMatch (_ninfo.Version, _constraint.Version, _op)) {
+					if ((_parentop == DepOps.Not) && vmatch) {
 						result = false;
 					}
+					
+					if ((_parentop != DepOps.Not) && !vmatch) {
+						result = false;
+					}
 				}
-
+				Console.WriteLine (">>>>> IsEmptyVersion [ END ]");
+				
+				Console.WriteLine (">>>>> !result [BEGIN]");
 				if (!result) {
 					if (_parentop != DepOps.Null && _parentop != DepOps.Opt) {
 						throw new UnresolvedDependencyException (
 								string.Format("The following dependency for the module {0} could not be resolved: ({3} operator)\n\t{1} ({2})",
-									_info.Name, _constraint.Name, _constraint.Version, OpToString (_op))
+									_info.Name, _constraint.Name, _constraint.Version.ToString(), OpToString (_op))
 							);
 					}
 					else
 						return;			
 				}
+				Console.WriteLine (">>>>> !result [ END ]");
 					
 				if (_controller == null)
 					Console.WriteLine ("_controller is NULL!");
 					
+				if (_info == null)
+					Console.WriteLine ("_info -s NULL!");
+					
 				if (!checking) {
 					_controller.LoadModule (_constraint.Name);
 				}
 					
-				Console.WriteLine ("Checking {0} for {1} (Result: {2})", OpToString (_op), _info.Name, result);
+				Console.WriteLine ("Checking {0} for {1} (Result: {2})", OpToString (_op), _constraint.Name, result);
 				// we got this far, so obviously it loaded okay
 			}		
 		}
@@ -307,6 +322,8 @@
 					return vres < 0 || vres == 0;
 				case DepOps.NotEqual:
 					return vres != 0;
+				case DepOps.Loaded:
+					return true;
 			}
 			
 			return false;				

Modified: trunk/src/NModule.Core.Loader/ModuleController.cs
===================================================================
--- trunk/src/NModule.Core.Loader/ModuleController.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/src/NModule.Core.Loader/ModuleController.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -75,6 +75,11 @@
 		}
 		
 		public void LoadModule (ArrayList _parents, string _name) {
+			if (_name == null)
+			{
+				Console.WriteLine ("_name is NULL");
+			}
+			
 			if (_app_domain_map.ContainsKey (_name))
 			{
 				IncRef ((AppDomain)_app_domain_map[_name]);

Modified: trunk/src/NModule.Core.Loader/ModuleLoader.cs
===================================================================
--- trunk/src/NModule.Core.Loader/ModuleLoader.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/src/NModule.Core.Loader/ModuleLoader.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -70,7 +70,7 @@
 						string _f = f.Replace (s, "").Replace ("/", "");
 						Console.WriteLine ("Checking {0} against {1} ({2}) (Result: {3})", _name, _f, 
 							_f.Substring (0, _f.Length - 4), (_f.Substring (0, _f.Length - 4) == _name));
-						if (_f.Substring (0, _f.Length - 4).IndexOf (_name) != -1) {
+						if (_f.Substring (0, _f.Length - 4) == _name) {
 							return s + "/" + _f;
 						}
 					}
@@ -95,6 +95,7 @@
 		
 		public Assembly GetAssembly (AppDomain _domain, string _name) {
 			foreach (Assembly _asm in _domain.GetAssemblies ()) {
+				Console.WriteLine ("_asm.GetName().Name {0} / _name {1}", _asm.GetName().Name, _name);
 				if (_asm.GetName ().Name == _name)
 					return _asm;
 			}
@@ -111,6 +112,7 @@
 				_parents = new ArrayList ();
 			
 			// Try to find the module on the search path.
+			Console.WriteLine (">>>>> SearchForModule [BEGIN]");
 			string _filename = SearchForModule (_name);
 			
 			if (_filename == null)
@@ -118,18 +120,20 @@
 				
 			// Okay, well, now we know the module exists at least in the file (we hope its a proper dll, but we'll see :).  Now we
 			// need to create the temporary AppDomain and load it to get the info from it.
-			AppDomain _tempDomain = AppDomain.CreateDomain (_name);
+			AppDomain _tempDomain = AppDomain.CreateDomain (string.Format("{0}{1}{2}", _name, "adlfjdsadgkljsg", "adlgjdfslghkeryt"));
 			
-			// This is dirty.  I hate me.
-			byte[] _raw_bytes = LoadRawFile (_filename);	
+			Console.WriteLine (">>>>> LoadRawFile [BEGIN]");
+			byte[] _raw_bytes = LoadRawFile (_filename);
 			
 			// set up the search path
+			Console.WriteLine (">>>>> SearchPath [BEGIN]");
 			foreach (string s in _search_path) {
 				_tempDomain.AppendPrivatePath (s);
 			}
 			
 			// The throw here is mostly used from dep resolver calls, although it should also be caught by the immediate caller
 			// (i.e. the application).
+			Console.WriteLine (">>>>> Load [BEGIN]");
 			try {
 				_tempDomain.Load (_raw_bytes);
 			} catch (BadImageFormatException e) {
@@ -138,8 +142,10 @@
 			}
 			
 			// Okay, now lets grab the module info from the assembly attributes.
+			Console.WriteLine (">>>>> GetAssembly [BEGIN]");
 			Assembly _asm = GetAssembly (_tempDomain, _name);
 			
+			Console.WriteLine (">>>>> ModuleInfo [BEGIN]");
 			try {
 				_info = new ModuleInfo (_asm);
 			} catch (ModuleInfoException e) {
@@ -159,6 +165,7 @@
 			// on Y, because if Z suceeds but Y fails, we don't want X, Y, or Z to fail.  This way,
 			// we can ensure the entire tree can be loaded first (this does take into account already
 			// loaded assemblies).
+			Console.WriteLine (">>>>> DepCheck [BEGIN]");
 			if (depcheck)
 			{
 				DepResolver _resolver = new DepResolver (_controller, _search_path);
@@ -170,7 +177,8 @@
 					throw e;
 				}
 			}
-		
+
+			Console.WriteLine (">>>>> Checking [BEGIN]");		
 			if (checking)
 			{
 				AppDomain.Unload (_tempDomain);
@@ -182,6 +190,7 @@
 			// now we create the *real* app domain.
 						
 			// We can't do any more with this.
+			Console.WriteLine (">>>>> Return [BEGIN]");
 			return _tempDomain;
 		}
 	}

Modified: trunk/src/NModule.Core.Module/ModuleInfo.cs
===================================================================
--- trunk/src/NModule.Core.Module/ModuleInfo.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/src/NModule.Core.Module/ModuleInfo.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -107,7 +107,7 @@
 		}
 		
 		public ModuleInfo (Assembly _asm) {
-			_name = _asm.GetName().Name;
+			_name = _asm.GetName ().Name;
 			_version = DepVersion.VersionParse (_asm.GetName().Version.ToString ());
 			
 			ModuleDependencyAttribute _depAttr;
@@ -115,6 +115,9 @@
 			
 			try {
 				_depAttr = ((ModuleDependencyAttribute)(_asm.GetCustomAttributes (typeof (ModuleDependencyAttribute), false)[0]));
+				foreach (ModuleDependencyAttribute _attr in _asm.GetCustomAttributes (typeof (ModuleDependencyAttribute), false)) {
+					Console.WriteLine (_attr.DepString);
+				}
 			} catch (IndexOutOfRangeException) {
 				_depAttr = null;
 			}

Modified: trunk/test/NModule.Core.Test/NModule.Core.Test.mdp
===================================================================
--- trunk/test/NModule.Core.Test/NModule.Core.Test.mdp	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/NModule.Core.Test.mdp	2005-07-04 22:08:34 UTC (rev 38)
@@ -28,5 +28,8 @@
     <File name="./AssemblyInfo.cs" subtype="Code" buildaction="Compile" />
     <File name="./TESTS" subtype="Code" buildaction="Compile" />
     <File name="./NModuleTests.cs" subtype="Code" buildaction="Compile" />
+    <File name="./nm-ld.cs" subtype="Code" buildaction="Compile" />
+    <File name="./nm-ul.cs" subtype="Code" buildaction="Compile" />
+    <File name="./nm-dr.cs" subtype="Code" buildaction="Compile" />
   </Contents>
 </Project>
\ No newline at end of file

Modified: trunk/test/NModule.Core.Test/NModuleTests.cs
===================================================================
--- trunk/test/NModule.Core.Test/NModuleTests.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/NModuleTests.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -1,280 +0,0 @@
-//
-// NModuleTests.cs
-//
-// Author:
-//     Michael Tindal <urilith at gentoo.org>
-//
-// Copyright (C) 2005 Michael Tindal and the individuals listed on
-// the ChangeLog entries.
-//
-// Permission is hereby granted, free of charge, to any person obtaining
-// a copy of this software and associated documentation files (the
-// "Software"), to deal in the Software without restriction, including
-// without limitation the rights to use, copy, modify, merge, publish,
-// distribute, sublicense, and/or sell copies of the Software, and to
-// permit persons to whom the Software is furnished to do so, subject to
-// the following conditions:
-// 
-// The above copyright notice and this permission notice shall be
-// included in all copies or substantial portions of the Software.
-// 
-// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-//
-
-namespace NModule.Core.Test {
-
-	using System;
-	using System.Reflection;
-	using System.Collections;
-	
-	using NModule.Core.Loader;
-	using NModule.Core;
-	using NModule.Core.Module;
-	using NModule.Dependency.Core;
-	using NModule.Dependency.Parser;
-	using NModule.Dependency.Resolver;
-	
-	using NUnit.Framework;
-	
-	[TestFixture]
-	public class NModuleTests {
-	
-		public NModuleTests () {
-		}
-		
-		// nm-ld-01 - Loading with no dependencies, single dir search path.
-		[Test]
-		public void nm_ld_01 () {
-			Console.WriteLine ("nm_ld_01");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld/");
-			
-			_mc.LoadModule ("nm-ld-01");
-		}
-		
-		// nm-ld-02 - Loading with no dependencies, single dir search path, not found.
-		[Test]
-		[ExpectedException (typeof (ModuleNotFoundException))]
-		public void nm_ld_02 () {
-			Console.WriteLine ("nm_ld_02");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			
-			_mc.LoadModule ("nm-ld-02");
-		}
-		
-		// nm-ld-03 - Loading with no dependencies, multiple dir search path, first dir.
-		[Test]
-		public void nm_ld_03 () {
-			Console.WriteLine ("nm_ld_03");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-03");
-		}
-		
-		// nm-ld-04 - Loading with no dependencies, multiple dir search path, middle dir.
-		[Test]
-		public void nm_ld_04 () {
-			Console.WriteLine ("nm_ld_04");
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-04");
-		}
-		
-		// nm-ld-05 - Loading with no dependencies, multiple dir search path, last dir.
-		[Test]
-		public void nm_ld_05 () {
-			Console.WriteLine ("nm_ld_05");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			_mc.SearchPath.Add ("data/nm-ld");
-			
-			_mc.LoadModule ("nm-ld-05");
-		}
-		
-		// nm-ld-06 - Loading with no dependencies, multiple dir search path, not found.
-		[Test]
-		[ExpectedException (typeof (ModuleNotFoundException))]
-		public void nm_ld_06 () {
-			Console.WriteLine ("nm_ld_06");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ld");
-			_mc.SearchPath.Add ("data/nm-ld-2");
-			_mc.SearchPath.Add ("data/nm-ld-3");
-			
-			_mc.LoadModule ("nm-ld-06");
-		}
-		
-		// nm-ul-01 - Unloading with no dependencies
-		[Test]
-		public void nm_ul_01 () {
-			Console.WriteLine ("nm_ul_01");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ul");
-			
-			_mc.LoadModule ("nm-ul-01");
-			
-			_mc.UnloadModule ("nm-ul-01");
-		}
-		
-		// nm-ul-02 - Unloading with ref count > 1
-		[Test]
-		[ExpectedException (typeof (DomainStillReferencedException))]
-		public void nm_ul_02 () {
-			Console.WriteLine ("nm_ul_02");
-			
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-ul");
-			
-			_mc.LoadModule ("nm-ul-02");
-			
-			_mc.LoadModule ("nm-ul-02");
-			
-			_mc.UnloadModule ("nm-ul-02");
-		}
-		
-		// This is a huge section.
-		
-		/**
-		 * Combinations to be tested:
-		 *   Valid-combination operators: && || ^^ !! ??
-		 *   Valid-singleton operators: == != << <= >> >= ##
-		 *   (==)
-		 *   (!=)
-		 *   (<<)
-		 *   (>>)
-		 *   (<=)
-		 *   (>=)
-		 *   (##)
-		 *   (&& (==) (>=))
-		 *   (|| (>>) (<<))
-		 *   (^^ (>>) (!=))
-		 *   (!! (==))
-		 *   (?? (>=))
-		 *   (&& (|| (==) (!=)) (?? (##)))
-		 *   (|| (&& (##) (##)) (!! (!=)))
-		 **/
-		[Test]
-		public void nm_dr_01 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-01a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01b"));
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01d"));
-			Assert.IsFalse (_mc.IsLoaded ("nm-dr-01c"));
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01e"));
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01f"));
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01g"));
-		}
-		
-		//[Test]
-		public void nm_dr_02 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-02a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-02b"));
-		}
-		
-		//[Test]
-		public void nm_dr_03 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-03a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-03b"));
-		}
-		
-		//[Test]
-		public void nm_dr_04 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-04a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-04b"));
-		}
-		
-		//[Test]
-		public void nm_dr_05 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-05a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-05b"));
-		}
-		
-		//[Test]
-		public void nm_dr_06 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-06a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-06b"));
-		}
-		
-		//[Test]
-		public void nm_dr_07 () {
-			ModuleController _mc = new ModuleController ();
-			
-			_mc.SearchPath.Add ("data/nm-dr");
-			
-			// This will look for a specific version of nm-dr-01b
-			_mc.LoadModule ("nm-dr-07a");
-			
-			// If it worked, we should have a domain for nm-dr-01b
-			Assert.IsTrue (_mc.IsLoaded ("nm-dr-07b"));
-		}
-	}
-}

Modified: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -39,7 +39,7 @@
 using NModule.Dependency.Resolver;
 
 [assembly: AssemblyVersion ("1.0.*")]
-[assembly: ModuleDependency ("(&& (&& (== nm-dr-01b 1.0) (>> nm-dr-01d 1.2)) (?? (<< nm-dr-01c 1.0)))")]
+[assembly: ModuleDependency ("(== nm-dr-01b 1.0)")]
 [assembly: ModuleRole ("")]
 
 namespace NModule.Core.Test.nm_dr {

Modified: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-01b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -39,7 +39,6 @@
 using NModule.Dependency.Resolver;
 
 [assembly: AssemblyVersion ("1.0.*")]
-[assembly: ModuleDependency ("(## nm-dr-01e)")]
 [assembly: ModuleRole ("")]
 
 namespace NModule.Core.Test.nm_dr {

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(!= nm-dr-02b 1.0)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_02a_module {
+		public nm_dr_02a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.1.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_02b_module {
+		public nm_dr_02b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-02b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(<< nm-dr-03b 1.0)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_03a_module {
+		public nm_dr_03a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("0.9.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_03b_module {
+		public nm_dr_03b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-03b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(>> nm-dr-04b 1.0)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_04a_module {
+		public nm_dr_04a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.1.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_04b_module {
+		public nm_dr_04b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-04b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(<= nm-dr-05b 1.0)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_05a_module {
+		public nm_dr_05a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("0.9.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_05b_module {
+		public nm_dr_05b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-05b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(>= nm-dr-06b 1.0)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_06a_module {
+		public nm_dr_06a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_06b_module {
+		public nm_dr_06b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-06b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(## nm-dr-07b)")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_07a_module {
+		public nm_dr_07a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_07b_module {
+		public nm_dr_07b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-07b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(&& (== nm-dr-08b 1.0) (>= nm-dr-08c 2.0))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_08a_module {
+		public nm_dr_08a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_08b_module {
+		public nm_dr_08b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("2.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_08c_module {
+		public nm_dr_08c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-08c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(|| (>> nm-dr-09b 1.0) (<< nm-dr-09c 1.0))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_09a_module {
+		public nm_dr_09a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("0.9.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_09b_module {
+		public nm_dr_09b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("0.9.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_09c_module {
+		public nm_dr_09c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-09c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(^^ (>> nm-dr-10b 1.0) (!= nm-dr-10c 1.1))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_10a_module {
+		public nm_dr_10a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.1.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_10b_module {
+		public nm_dr_10b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.1.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_10c_module {
+		public nm_dr_10c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-10c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(!! (== nm-dr-11b 1.1))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_11a_module {
+		public nm_dr_11a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_11b_module {
+		public nm_dr_11b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-11b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(?? (>= nm-dr-12b 4.0))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_12a_module {
+		public nm_dr_12a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("4.3.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_12b_module {
+		public nm_dr_12b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-12b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(&& (|| (== nm-dr-13b 1.0) (!= nm-dr-13c 2.0)) (?? (## nm-dr-13d)))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_13a_module {
+		public nm_dr_13a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_13b_module {
+		public nm_dr_13b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("2.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_13c_module {
+		public nm_dr_13c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-13c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,50 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleDependency ("(|| (&& (## nm-dr-14b) (## nm-dr-14c)) (!! (!= nm-dr-14d 1.0)))")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_14a_module {
+		public nm_dr_14a_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14a.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_14b_module {
+		public nm_dr_14b_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14b.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.0.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_14c_module {
+		public nm_dr_14c_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14c.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs
===================================================================
--- trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,49 @@
+//
+// nm-ld-01.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+using System;
+using System.Reflection;
+using System.Collections;
+	
+using NModule.Core.Loader;
+using NModule.Core;
+using NModule.Core.Module;
+using NModule.Dependency.Core;
+using NModule.Dependency.Parser;
+using NModule.Dependency.Resolver;
+
+[assembly: AssemblyVersion ("1.1.*")]
+[assembly: ModuleRole ("")]
+
+namespace NModule.Core.Test.nm_dr {
+	public class nm_dr_14d_module {
+		public nm_dr_14d_module() {
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/data/src/nm-dr/nm-dr-14d.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/nm-dr.cs
===================================================================
--- trunk/test/NModule.Core.Test/nm-dr.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/nm-dr.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,262 @@
+//
+// nm-dr.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+namespace NModule.Core.Test {
+
+	using System;
+	using System.Reflection;
+	using System.Collections;
+	
+	using NModule.Core.Loader;
+	using NModule.Core;
+	using NModule.Core.Module;
+	using NModule.Dependency.Core;
+	using NModule.Dependency.Parser;
+	using NModule.Dependency.Resolver;
+	
+	using NUnit.Framework;
+	
+	[TestFixture]
+	public class nm_dr {
+	
+		public nm_dr () {
+		}
+		
+		// This is a huge section.
+		
+		// ==
+		[Test]
+		public void nm_dr_01 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-01a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-01b"));
+		}
+		
+		// !=
+		[Test]
+		public void nm_dr_02 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-02a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-02a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-02b"));
+		}
+		
+		// <<
+		[Test]
+		public void nm_dr_03 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-03a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-03a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-03b"));
+		}
+		
+		// >>
+		[Test]
+		public void nm_dr_04 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-04a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-04a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-04b"));
+		}
+		
+		// <=
+		[Test]
+		public void nm_dr_05 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-05a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-05a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-05b"));
+		}
+		
+		// >=
+		[Test]
+		public void nm_dr_06 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-06a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-06a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-06b"));
+		}
+		
+		// ##
+		[Test]
+		public void nm_dr_07 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			// This will look for a specific version of nm-dr-01b
+			_mc.LoadModule ("nm-dr-07a");
+			
+			// If it worked, we should have a domain for nm-dr-01b
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-07a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-07b"));
+		}
+		
+		// (&& (==) (>=))
+		[Test]
+		public void nm_dr_08 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-08a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-08a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-08b"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-08c"));
+		}
+		
+		// (|| (>>) (<<))
+		[Test]
+		public void nm_dr_09 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-09a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-09a"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-09b"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-09c"));
+		}
+		
+		// (^^ (>>) (!=))
+		[Test]
+		public void nm_dr_10 () {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-10a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-10a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-10b"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-10c"));
+		}
+		
+		// (!! (==))
+		[Test]
+		public void nm_dr_11() {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-11a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-11a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-11b"));
+		}
+		
+		// (?? (>=))
+		[Test]
+		public void nm_dr_12() {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-12a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-12a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-12b"));
+		}
+		
+		// (&& (|| (==) (!=)) (?? (##)))
+		[Test]
+		public void nm_dr_13() {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-13a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-13a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-13b"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-13c"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-13d"));
+		}
+		
+		// (|| (&& (##) (##)) (!! (!=)))
+		[Test]
+		public void nm_dr_14() {
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-dr");
+			
+			_mc.LoadModule ("nm-dr-14a");
+			
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-14a"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-14b"));
+			Assert.IsTrue (_mc.IsLoaded ("nm-dr-14c"));
+			Assert.IsFalse (_mc.IsLoaded ("nm-dr-14d"));
+		}
+
+		public static void Main (string[] args) {
+			nm_dr _t = new nm_dr();
+
+			_t.nm_dr_14 ();
+		}
+	}
+}


Property changes on: trunk/test/NModule.Core.Test/nm-dr.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/nm-ld.cs
===================================================================
--- trunk/test/NModule.Core.Test/nm-ld.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/nm-ld.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,132 @@
+//
+// nm-ld.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+namespace NModule.Core.Test {
+
+	using System;
+	using System.Reflection;
+	using System.Collections;
+	
+	using NModule.Core.Loader;
+	using NModule.Core;
+	using NModule.Core.Module;
+	using NModule.Dependency.Core;
+	using NModule.Dependency.Parser;
+	using NModule.Dependency.Resolver;
+	
+	using NUnit.Framework;
+	
+	[TestFixture]
+	public class nm_ld {
+	
+		public nm_ld () {
+		}
+		
+		// nm-ld-01 - Loading with no dependencies, single dir search path.
+		[Test]
+		public void nm_ld_01 () {
+			Console.WriteLine ("nm_ld_01");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld/");
+			
+			_mc.LoadModule ("nm-ld-01");
+		}
+		
+		// nm-ld-02 - Loading with no dependencies, single dir search path, not found.
+		[Test]
+		[ExpectedException (typeof (ModuleNotFoundException))]
+		public void nm_ld_02 () {
+			Console.WriteLine ("nm_ld_02");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			
+			_mc.LoadModule ("nm-ld-02");
+		}
+		
+		// nm-ld-03 - Loading with no dependencies, multiple dir search path, first dir.
+		[Test]
+		public void nm_ld_03 () {
+			Console.WriteLine ("nm_ld_03");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-03");
+		}
+		
+		// nm-ld-04 - Loading with no dependencies, multiple dir search path, middle dir.
+		[Test]
+		public void nm_ld_04 () {
+			Console.WriteLine ("nm_ld_04");
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-04");
+		}
+		
+		// nm-ld-05 - Loading with no dependencies, multiple dir search path, last dir.
+		[Test]
+		public void nm_ld_05 () {
+			Console.WriteLine ("nm_ld_05");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			_mc.SearchPath.Add ("data/nm-ld");
+			
+			_mc.LoadModule ("nm-ld-05");
+		}
+		
+		// nm-ld-06 - Loading with no dependencies, multiple dir search path, not found.
+		[Test]
+		[ExpectedException (typeof (ModuleNotFoundException))]
+		public void nm_ld_06 () {
+			Console.WriteLine ("nm_ld_06");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ld");
+			_mc.SearchPath.Add ("data/nm-ld-2");
+			_mc.SearchPath.Add ("data/nm-ld-3");
+			
+			_mc.LoadModule ("nm-ld-06");
+		}
+	}
+}
\ No newline at end of file


Property changes on: trunk/test/NModule.Core.Test/nm-ld.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Added: trunk/test/NModule.Core.Test/nm-ul.cs
===================================================================
--- trunk/test/NModule.Core.Test/nm-ul.cs	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Core.Test/nm-ul.cs	2005-07-04 22:08:34 UTC (rev 38)
@@ -0,0 +1,82 @@
+//
+// nm-ul.cs
+//
+// Author:
+//     Michael Tindal <urilith at gentoo.org>
+//
+// Copyright (C) 2005 Michael Tindal and the individuals listed on
+// the ChangeLog entries.
+//
+// Permission is hereby granted, free of charge, to any person obtaining
+// a copy of this software and associated documentation files (the
+// "Software"), to deal in the Software without restriction, including
+// without limitation the rights to use, copy, modify, merge, publish,
+// distribute, sublicense, and/or sell copies of the Software, and to
+// permit persons to whom the Software is furnished to do so, subject to
+// the following conditions:
+// 
+// The above copyright notice and this permission notice shall be
+// included in all copies or substantial portions of the Software.
+// 
+// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
+// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
+// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
+// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+//
+
+namespace NModule.Core.Test {
+
+	using System;
+	using System.Reflection;
+	using System.Collections;
+	
+	using NModule.Core.Loader;
+	using NModule.Core;
+	using NModule.Core.Module;
+	using NModule.Dependency.Core;
+	using NModule.Dependency.Parser;
+	using NModule.Dependency.Resolver;
+	
+	using NUnit.Framework;
+	
+	[TestFixture]
+	public class nm_ul {
+	
+		public nm_ul () {
+		}
+		
+		// nm-ul-01 - Unloading with no dependencies
+		[Test]
+		public void nm_ul_01 () {
+			Console.WriteLine ("nm_ul_01");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ul");
+			
+			_mc.LoadModule ("nm-ul-01");
+			
+			_mc.UnloadModule ("nm-ul-01");
+		}
+		
+		// nm-ul-02 - Unloading with ref count > 1
+		[Test]
+		[ExpectedException (typeof (DomainStillReferencedException))]
+		public void nm_ul_02 () {
+			Console.WriteLine ("nm_ul_02");
+			
+			ModuleController _mc = new ModuleController ();
+			
+			_mc.SearchPath.Add ("data/nm-ul");
+			
+			_mc.LoadModule ("nm-ul-02");
+			
+			_mc.LoadModule ("nm-ul-02");
+			
+			_mc.UnloadModule ("nm-ul-02");
+		}
+	}
+}
\ No newline at end of file


Property changes on: trunk/test/NModule.Core.Test/nm-ul.cs
___________________________________________________________________
Name: svn:mime-type
   + text/cpp

Modified: trunk/test/NModule.Test.build
===================================================================
--- trunk/test/NModule.Test.build	2005-07-04 17:48:00 UTC (rev 37)
+++ trunk/test/NModule.Test.build	2005-07-04 22:08:34 UTC (rev 38)
@@ -183,7 +183,7 @@
     </csc>
   </target>
 
-  <target name="nm-dr" depends="nm-dr-01a,nm-dr-01b,nm-dr-01c,nm-dr-01d,nm-dr-01e,nm-dr-01f,nm-dr-01g" />
+  <target name="nm-dr" depends="nm-dr-01a,nm-dr-01b,nm-dr-02a,nm-dr-02b,nm-dr-03a,nm-dr-03b,nm-dr-04a,nm-dr-04b,nm-dr-05a,nm-dr-05b,nm-dr-06a,nm-dr-06b,nm-dr-07a,nm-dr-07b,nm-dr-08a,nm-dr-08b,nm-dr-08c,nm-dr-09a,nm-dr-09b,nm-dr-09c,nm-dr-10a,nm-dr-10b,nm-dr-10c,nm-dr-11a,nm-dr-11b,nm-dr-12a,nm-dr-12b,nm-dr-13a,nm-dr-13b,nm-dr-13c,nm-dr-14a,nm-dr-14b,nm-dr-14c,nm-dr-14d" />
 
   <target name="nm-dr-01a">
     <csc target="library"
@@ -222,13 +222,51 @@
       </references>
     </csc>
   </target>
+
+  <target name="nm-dr-02a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-02a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-02a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-02b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-02b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-02b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
   
-  <target name="nm-dr-01c">
+  <target name="nm-dr-03a">
     <csc target="library"
-        output="${nm-dr-dir}/nm-dr-01c.dll"
+        output="${nm-dr-dir}/nm-dr-03a.dll"
         debug="${build.debug}" define="${build.defines.csc}">
       <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
-        <include name="nm-dr-01c.cs"/>
+        <include name="nm-dr-03a.cs"/>
       </sources>
       <references basedir="${current.build.dir}">
         <include name="NModule.Dependency.Parser.dll" />
@@ -241,13 +279,32 @@
       </references>
     </csc>
   </target>
+
+  <target name="nm-dr-03b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-03b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-03b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
   
-  <target name="nm-dr-01d">
+  <target name="nm-dr-04a">
     <csc target="library"
-        output="${nm-dr-dir}/nm-dr-01d.dll"
+        output="${nm-dr-dir}/nm-dr-04a.dll"
         debug="${build.debug}" define="${build.defines.csc}">
       <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
-        <include name="nm-dr-01d.cs"/>
+        <include name="nm-dr-04a.cs"/>
       </sources>
       <references basedir="${current.build.dir}">
         <include name="NModule.Dependency.Parser.dll" />
@@ -260,13 +317,32 @@
       </references>
     </csc>
   </target>
+
+  <target name="nm-dr-04b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-04b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-04b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
   
-  <target name="nm-dr-01e">
+  <target name="nm-dr-05a">
     <csc target="library"
-        output="${nm-dr-dir}/nm-dr-01e.dll"
+        output="${nm-dr-dir}/nm-dr-05a.dll"
         debug="${build.debug}" define="${build.defines.csc}">
       <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
-        <include name="nm-dr-01e.cs"/>
+        <include name="nm-dr-05a.cs"/>
       </sources>
       <references basedir="${current.build.dir}">
         <include name="NModule.Dependency.Parser.dll" />
@@ -279,13 +355,146 @@
       </references>
     </csc>
   </target>
+
+  <target name="nm-dr-05b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-05b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-05b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-06a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-06a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-06a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-06b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-06b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-06b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-07a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-07a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-07a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-07b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-07b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-07b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-08a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-08a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-08a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-08b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-08b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-08b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
   
-  <target name="nm-dr-01f">
+  <target name="nm-dr-08c">
     <csc target="library"
-        output="${nm-dr-dir}/nm-dr-01f.dll"
+        output="${nm-dr-dir}/nm-dr-08c.dll"
         debug="${build.debug}" define="${build.defines.csc}">
       <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
-        <include name="nm-dr-01f.cs"/>
+        <include name="nm-dr-08c.cs"/>
       </sources>
       <references basedir="${current.build.dir}">
         <include name="NModule.Dependency.Parser.dll" />
@@ -298,13 +507,222 @@
       </references>
     </csc>
   </target>
+
+  <target name="nm-dr-09a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-09a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-09a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-09b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-09b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-09b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-09c">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-09c.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-09c.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-10a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-10a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-10a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-10b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-10b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-10b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-10c">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-10c.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-10c.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-11a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-11a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-11a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-11b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-11b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-11b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-12a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-12a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-12a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-12b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-12b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-12b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-13a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-13a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-13a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
   
-  <target name="nm-dr-01g">
+  <target name="nm-dr-13b">
     <csc target="library"
-        output="${nm-dr-dir}/nm-dr-01g.dll"
+        output="${nm-dr-dir}/nm-dr-13b.dll"
         debug="${build.debug}" define="${build.defines.csc}">
       <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
-        <include name="nm-dr-01g.cs"/>
+        <include name="nm-dr-13b.cs"/>
       </sources>
       <references basedir="${current.build.dir}">
         <include name="NModule.Dependency.Parser.dll" />
@@ -318,9 +736,101 @@
     </csc>
   </target>
 
-  <assemblyfileset id="nunit.framework">
-    <include name="nunit.framework.dll" />
-  </assemblyfileset>
+  <target name="nm-dr-13c">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-13c.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-13c.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+  
+  <target name="nm-dr-14a">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-14a.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-14a.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-14b">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-14b.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-14b.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-14c">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-14c.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-14c.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
+  <target name="nm-dr-14d">
+    <csc target="library"
+        output="${nm-dr-dir}/nm-dr-14d.dll"
+        debug="${build.debug}" define="${build.defines.csc}">
+      <sources basedir="${path::combine(project.test.data.src.dir,'nm-dr')}">
+        <include name="nm-dr-14d.cs"/>
+      </sources>
+      <references basedir="${current.build.dir}">
+        <include name="NModule.Dependency.Parser.dll" />
+        <include name="antlr-runtime.dll" />
+        <include name="NModule.Core.dll" />
+        <include name="NModule.Core.Loader.dll" />
+        <include name="NModule.Core.Module.dll" />
+        <include name="NModule.Dependency.Core.dll" />
+        <include name="NModule.Dependency.Parser.dll" />
+      </references>
+    </csc>
+  </target>
+
   <target name="NModule.Core.Test" depends="set-build-dir">
     <csc target="library"
         output="${current.build.dir}/NModule.Core.Test.dll"



